<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>章鱼猫の博客</title>
  
  <subtitle>记录生活的点点滴滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://octocat9lee.github.io/"/>
  <updated>2023-04-04T03:41:50.797Z</updated>
  <id>https://octocat9lee.github.io/</id>
  
  <author>
    <name>章鱼猫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gitlab 配置 sonar 检测工具</title>
    <link href="https://octocat9lee.github.io/2022/10/17/gitlab-%E9%85%8D%E7%BD%AE-sonar-%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>https://octocat9lee.github.io/2022/10/17/gitlab-配置-sonar-检测工具/</id>
    <published>2022-10-17T02:04:16.000Z</published>
    <updated>2023-04-04T03:41:50.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文主要介绍在 <code>gitlab</code> 管理仓库中配置 <code>sonar</code> 代码质量检查工具。</p><h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 必须首先配置 master 分支，其他分支根据实际情况进行配置</span><br><span class="line">2 在仓库配置完成后，通过 [CI/CI]-&gt; [流水线] 菜单进行查看</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="gitlab-ci-yml-配置"><a href="#gitlab-ci-yml-配置" class="headerlink" title=".gitlab-ci.yml 配置"></a>.gitlab-ci.yml 配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">新增文件名: .gitlab-ci.yml  <span class="comment"># 注意文件名使用 . 开头</span></span><br><span class="line"></span><br><span class="line">文件内容：</span><br><span class="line"></span><br><span class="line">stages:</span><br><span class="line">  - sonarqube_scan</span><br><span class="line">  - sendmail</span><br><span class="line"></span><br><span class="line">sonarqube_scan_job:</span><br><span class="line">  stage: sonarqube_scan</span><br><span class="line">  script:</span><br><span class="line">    - sonar-scanner -Dsonar.projectName=<span class="variable">$CI_PROJECT_NAME</span> -Dsonar.projectKey=<span class="variable">$CI_PROJECT_NAME</span> -Dsonar.branch.name=<span class="variable">$&#123;CI_COMMIT_REF_NAME&#125;</span></span><br><span class="line">  tags:</span><br><span class="line">    - sonar-scanner</span><br><span class="line">  when: always</span><br><span class="line"></span><br><span class="line">sendmail_job:</span><br><span class="line">  stage: sendmail</span><br><span class="line">  script:</span><br><span class="line">    - <span class="built_in">echo</span> <span class="variable">$GITLAB_USER_EMAIL</span></span><br><span class="line">    - <span class="built_in">echo</span> <span class="variable">$CI_PROJECT_NAME</span></span><br><span class="line">    - <span class="built_in">echo</span> <span class="variable">$CI_COMMIT_REF_NAME</span></span><br><span class="line">    - python /opt/sonarqube_api.py <span class="variable">$CI_PROJECT_NAME</span> <span class="variable">$CI_COMMIT_REF_NAME</span> <span class="variable">$GITLAB_USER_EMAIL</span></span><br><span class="line">    </span><br><span class="line">  tags:</span><br><span class="line">    - sonar-scanner</span><br></pre></td></tr></table></figure><h1 id="sonar-project-properties-配置"><a href="#sonar-project-properties-配置" class="headerlink" title="sonar-project.properties 配置"></a>sonar-project.properties 配置</h1><h2 id="Java-项目配置"><a href="#Java-项目配置" class="headerlink" title="Java 项目配置"></a>Java 项目配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">新增文件名：sonar-project.properties</span><br><span class="line"></span><br><span class="line">文件内容：</span><br><span class="line"></span><br><span class="line">sonar.projectKey=keeperplus</span><br><span class="line">sonar.projectName=keeperplus</span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line">sonar.sources=.</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line">sonar.language=java</span><br><span class="line">sonar.java.source=1.8</span><br><span class="line">sonar.java.binaries=.</span><br><span class="line"></span><br><span class="line">注意：需根据自己项目修改属性 sonar.projectKey、sonar.projectName</span><br></pre></td></tr></table></figure><h2 id="NodeJS-项目配置"><a href="#NodeJS-项目配置" class="headerlink" title="NodeJS 项目配置"></a>NodeJS 项目配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">新增文件名：sonar-project.properties</span><br><span class="line"></span><br><span class="line">文件内容：</span><br><span class="line"></span><br><span class="line">sonar.projectKey=test-ui</span><br><span class="line">sonar.projectName=test-ui</span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line">sonar.modules=javascript-module</span><br><span class="line">javascript-module.sonar.projectName=test-ui</span><br><span class="line">javascript-module.sonar.language=js</span><br><span class="line">javascript-module.sonar.sources=.</span><br><span class="line">javascript-module.sonar.exclusions=**/lib/**/*,**/node_modules/**/*,**/public/**/*</span><br><span class="line">javascript-module.sonar.projectBaseDir=.</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：需根据自己项目修改属性 sonar.projectKey、sonar.projectName、javascriptmodule.sonar.projectName</span></span><br></pre></td></tr></table></figure><h2 id="C-项目配置"><a href="#C-项目配置" class="headerlink" title="C++ 项目配置"></a>C++ 项目配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">新增文件名：sonar-project.properties</span><br><span class="line"></span><br><span class="line">文件内容：</span><br><span class="line">sonar.projectKey=<span class="built_in">test</span></span><br><span class="line">sonar.projectName=<span class="built_in">test</span></span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line">sonar.sources=.</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line">sonar.language=c++</span><br><span class="line">sonar.cxx.file.suffixes=.cxx,.cpp,.cc,.c,.hxx,.hh,.handled</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：需根据自己项目修改属性 sonar.projectKey、sonar.projectN</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍在 &lt;code&gt;gitlab&lt;/code&gt; 管理仓库中配置 &lt;code&gt;sonar&lt;/code&gt; 代码质量检查工具。&lt;/p&gt;
&lt;h1 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 必须首先配置 master 分支，其他分支根据实际情况进行配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 在仓库配置完成后，通过 [CI/CI]-&amp;gt; [流水线] 菜单进行查看&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Windows系统下支持H265的ffmpeg和ffplay工具编译</title>
    <link href="https://octocat9lee.github.io/2022/08/17/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%94%AF%E6%8C%81H265%E7%9A%84ffmpeg%E5%92%8Cffplay%E5%B7%A5%E5%85%B7%E7%BC%96%E8%AF%91/"/>
    <id>https://octocat9lee.github.io/2022/08/17/Windows系统下支持H265的ffmpeg和ffplay工具编译/</id>
    <published>2022-08-17T09:35:12.000Z</published>
    <updated>2023-04-04T03:41:50.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在 <code>Windows 10</code> 操作系统下，编译金山云支持 <code>H265</code> 编码 <code>RTMP</code> 的 <code>ffmpeg</code> 和 <code>ffplay</code> 工具。<br>(金山云 <code>FFmpeg</code> 地址)[<a href="https://github.com/ksvc/FFmpeg]">https://github.com/ksvc/FFmpeg]</a></p><span id="more"></span><h1 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h1><h2 id="msys2-安装"><a href="#msys2-安装" class="headerlink" title="msys2 安装"></a>msys2 安装</h2><p><code>msys2</code> 下载地址：<a href="https://www.msys2.org/">www.msys2.org</a><br>下载完成之后点击安装，建议安装在默认路径：<code>C:\msys64</code>，然后进行下一步安装，当安装完成后先不启动程序，修改代理软件全局代理，加速后续安装软件下载。<br>在开始任务栏，启动 <code>MYSY2 MinGW2 x64</code>：<br>依次执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新所有包</span></span><br><span class="line">pacman -Syu  <span class="comment"># 选择 Y 更新全部</span></span><br><span class="line"><span class="comment"># 再次执行</span></span><br><span class="line">pacman -Syu</span><br><span class="line"><span class="comment"># 安装基础工具</span></span><br><span class="line">pacman -S base-devel</span><br><span class="line"><span class="comment"># 安装编译工具</span></span><br><span class="line">pacman -S mingw-w64-x86_64-toolchain</span><br><span class="line"><span class="comment"># 安装其他工具，注意不要使用 msys2 安装 cmake 工具</span></span><br><span class="line">pacman -S yasm</span><br><span class="line">pacman -S nasm</span><br><span class="line">pacman -S make</span><br></pre></td></tr></table></figure><p>安装完成后，将 <code>msys2</code> 安装路径下的 <code>C:\msys64\mingw64\bin</code> 路径添加至 <code>Windows 10</code> 操作系统环境变量。</p><h2 id="安装-cmake-工具"><a href="#安装-cmake-工具" class="headerlink" title="安装 cmake 工具"></a>安装 cmake 工具</h2><p><code>cmake</code> 下载地址：<a href="https://cmake.org/download/">camke</a><br><code>cmake</code> 安装版本：<code>cmake-3.17.0-rc3-win64-x64</code>，安装时将路径添加至环境变量，否则手动添加。<br>安装完成之后我们在 <code>msys2</code> 中是找不到 <code>cmake</code> 命令的，这里我们把 <code>windows path</code> 添加到 <code>msys2</code> 中。<br>在 <code>Windows</code> 环境变量中新建一个名字为 <code>MSYS2_PATH_TYPE</code> 的环境变量，值改为 <code>inherit</code>，然后重启 <code>msys2</code> 就可以在 <code>msys2</code> 中使用安装的 <code>cmake</code> 了。</p><h1 id="代码编译"><a href="#代码编译" class="headerlink" title="代码编译"></a>代码编译</h1><h2 id="编译-libx264"><a href="#编译-libx264" class="headerlink" title="编译 libx264"></a>编译 libx264</h2><p><code>libx264</code> 下载地址：<a href="https://www.videolan.org/developers/x264.html">x264</a><br>将 <code>libx264</code> 源码下载到：<code>/home/octocat9lee/h265ffmpeg/x264</code> 路径下，进入上层目录，创建 <code>x264_install</code> 目录，并执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">basepath=$(<span class="built_in">cd</span> `<span class="built_in">dirname</span> <span class="variable">$0</span>`;<span class="built_in">pwd</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;basepath&#125;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;basepath&#125;</span>/x264</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;basepath&#125;</span>/x264_install --enable-static --enable-shared --extra-ldflags=-Wl,--output-def=libx264.def</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>上述命令执行完成后，<code>libx264</code> 将安装到 <code>/home/octocat9lee/h265ffmpeg/x264_install</code> 目录下。</p><h2 id="编译-libx265"><a href="#编译-libx265" class="headerlink" title="编译 libx265"></a>编译 libx265</h2><p><code>libx265</code> 下载地址：<a href="https://www.videolan.org/developers/x265.html">x265</a><br>将 <code>libx265</code> 源码下载到：<code>/home/octocat9lee/h265ffmpeg/x265_git</code> 路径下，进入 <code>/home/octocat9lee/h265ffmpeg/x265_git/build/msys</code> 路径，执行如下命令生成 <code>Makefile</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh make-Makefiles.sh</span><br></pre></td></tr></table></figure><p>在弹出的窗口中修改安装路径为 <code>C:\msys64\home\octocat9lee\h265ffmpeg\x265_install</code>，然后点击 <code>configure</code>，最后点击 <code>generate</code> 生成 <code>Makefile</code> 并关闭窗口。<br>生成 <code>Makefile</code> 后，执行如下命令进行编译和安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译安装完成后，<code>libx265</code> 将安装到 <code>/home/octocat9lee/h265ffmpeg/x265_install</code> 目录下。</p><h2 id="编译-SDL"><a href="#编译-SDL" class="headerlink" title="编译 SDL"></a>编译 SDL</h2><p>官网下载：<a href="https://www.libsdl.org/release/SDL2-2.0.22.tar.gz">SDL2-2.0.22</a><br>解压至 <code>/home/octocat9lee/h265ffmpeg</code> 目录，进入 <code>SDL2-2.0.22</code> 目录下，然后执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/octocat9lee/h265ffmpeg/sdl_install</span><br><span class="line">./configure --prefix=/home/octocat9lee/h265ffmpeg/sdl_install</span><br><span class="line">make -j</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译安装完成后，<code>sdl</code> 将安装到 <code>/home/octocat9lee/h265ffmpeg/sdl_install</code> 目录下。</p><h2 id="编译-ffmpeg"><a href="#编译-ffmpeg" class="headerlink" title="编译 ffmpeg"></a>编译 ffmpeg</h2><p>下载金山云支持 <code>RTMP H265</code> 编码版本：<a href="https://github.com/ksvc/FFmpeg">H265 RTMP ffmpeg</a>，切换至最新的 <code>3.4</code> 版本。<br><code>ffmpeg </code> 源码路径：<code>/home/octocat9lee/h265ffmpeg/FFmpeg</code>，执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加x264 x265 sdl pkg路径</span></span><br><span class="line">x264_pkg_path=/home/octocat9lee/h265ffmpeg/x264_install/lib/pkgconfig</span><br><span class="line">x265_pkg_path=/home/octocat9lee/h265ffmpeg/x265_install/lib/pkgconfig</span><br><span class="line">sdl_pkg_path=/home/octocat9lee/h265ffmpeg/sdl_install/lib/pkgconfig</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=<span class="variable">$x264_pkg_path</span>:<span class="variable">$x265_pkg_path</span>:<span class="variable">$sdl_pkg_path</span>:<span class="variable">$PKG_CONFIG_PATH</span></span><br><span class="line"></span><br><span class="line">./configure --enable-static --enable-pic \</span><br><span class="line">        --disable-encoders --enable-encoder=aac --enable-encoder=libx264 --enable-gpl --enable-libx264 --enable-encoder=libx265  --enable-libx265 \</span><br><span class="line">        --disable-decoders --enable-decoder=aac --enable-decoder=h264 --enable-decoder=hevc  \</span><br><span class="line">        --disable-demuxers --enable-demuxer=aac --enable-demuxer=mov --enable-demuxer=mpegts --enable-demuxer=flv --enable-demuxer=h264 --enable-demuxer=hevc --enable-demuxer=hls  \</span><br><span class="line">        --disable-muxers --enable-muxer=h264  --enable-muxer=flv --enable-muxer=f4v  --enable-muxer=mp4 \</span><br><span class="line">        --disable-doc</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure><p>因 <code>libx264</code> 版本问题，可能出现 <code>x264_bit_depth</code> 未定义问题，将 <code>libavcodec/libx264.c</code> 文件中的 <code>x264_bit_depth</code> 全部替换成 <code>X264_BIT_DEPTH</code>，然后重新编译。<br>编译完成后，将目录下的 <code>ffmpeg</code>、<code>ffplay</code> 以及<code>libx264-164.dll</code>、<code>libx265.dll</code> 和 <code>SDL2.dll</code> 文件复制到同一目录下，即可使用 <code>ffmpeg</code> 和 <code>ffplay</code> 进行 <code>H265</code> 的 <code>RTMP</code>、<code>HTTP-FLV</code>、<code>HTTP-HLS</code> 的使用。<br>使用示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg.exe -re -i hevc.mp4 -vcodec copy -an -f flv rtmp://10.0.15.44:20107/live/test</span><br><span class="line">ffplay.exe rtmp://10.0.15.44:20107/live/test</span><br><span class="line">ffplay.exe http://10.0.15.44:20109/live/test.flv</span><br><span class="line">ffplay.exe http://10.0.15.44:20109/live/test.m3u8</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/qq_37363702/article/details/123277359">ffmpeg5.0+h264+h265 windows下编译方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 &lt;code&gt;Windows 10&lt;/code&gt; 操作系统下，编译金山云支持 &lt;code&gt;H265&lt;/code&gt; 编码 &lt;code&gt;RTMP&lt;/code&gt; 的 &lt;code&gt;ffmpeg&lt;/code&gt; 和 &lt;code&gt;ffplay&lt;/code&gt; 工具。&lt;br&gt;(金山云 &lt;code&gt;FFmpeg&lt;/code&gt; 地址)[&lt;a href=&quot;https://github.com/ksvc/FFmpeg]&quot;&gt;https://github.com/ksvc/FFmpeg]&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>GB35114 国标平台认证</title>
    <link href="https://octocat9lee.github.io/2022/07/20/GB35114-%E5%9B%BD%E6%A0%87%E5%B9%B3%E5%8F%B0%E8%AE%A4%E8%AF%81/"/>
    <id>https://octocat9lee.github.io/2022/07/20/GB35114-国标平台认证/</id>
    <published>2022-07-20T05:09:07.000Z</published>
    <updated>2023-04-04T03:41:50.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="检测准备"><a href="#检测准备" class="headerlink" title="检测准备"></a>检测准备</h1><p>检测中心关于  <code>GB35114</code>  的认证中，受检测方需要准备内容如下:</p><ol><li>满足 <code>GB35114</code>  和  <code>GB28181</code>  协议的摄像头</li><li>密码机（包含<code>UKey</code>）</li><li>受测平台服务器</li><li>受测平台客户端</li></ol><p>其中，摄像头需要厂家拥有 <code>GB35114</code> 的资质，密码机需要拥有国密相关资质，需厂家提供摄像头和密码机的产品型号、国家认证的相关资质证书供检测中心在平台认证检测时进行核验。<br>密码机不建议使用软件方式实现，因资质问题，属于非法使用国密标准，检测中心可能不予承认。<br>针对密码机需要进行二次的业务开发，实现证书签发、证书验签、密码检测等功能。<br>除受测平台的服务器需要满足安全要求外，受测平台的客户端同样也需要通过 <code>UKey</code> 的认证以及使用安全的传输协议和客户端进行通信。</p><span id="more"></span><h1 id="检测场景"><a href="#检测场景" class="headerlink" title="检测场景"></a>检测场景</h1><p>检测认证中心的检测场景包括<code>上联</code>和<code>下联</code>两种检测场景：</p><ol><li>检测平台 &lt;— 受检平台 &lt;— <code>FDWSF</code> 摄像机</li><li>受检客户端 &lt;— 受检平台 &lt;— 检测平台 &lt;— <code>FDWSF</code> 摄像机<br>主要业务流程包括：注册、实时、录像、云台、状态查询等，不需要进行录像存储设备（<code>NVR</code>）、解码器等相关业务流程。</li></ol><h1 id="常见问答"><a href="#常见问答" class="headerlink" title="常见问答"></a>常见问答</h1><ul><li><p>Q：检测中心是否提供测试工具采购？<br>A：不提供</p></li><li><p>Q：检测中心是否提供 <code>GB35114</code> 的符合性测试规范文档？<br> A：符合性规范文档未公开，需认证检测缴费后由检测中心提供。</p></li><li><p>Q：摄像机、检测平台、受检平台间的数字证书如何分发？<br> A：检测平台和受检平台的证书通过线下的方式进行传递和交换；摄像机的证书使用密码机生成后，使用摄像机的管理页面配置下发。</p></li></ul><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li>在 <code>C/S</code> 架构中，客户端需要使用安全 <code>SIP</code> 信令注册到平台？</li><li>业务中，因语音对讲流程区别于其他业务流程，语音对讲流程是否包含在检测项目中？</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;检测准备&quot;&gt;&lt;a href=&quot;#检测准备&quot; class=&quot;headerlink&quot; title=&quot;检测准备&quot;&gt;&lt;/a&gt;检测准备&lt;/h1&gt;&lt;p&gt;检测中心关于  &lt;code&gt;GB35114&lt;/code&gt;  的认证中，受检测方需要准备内容如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;满足 &lt;code&gt;GB35114&lt;/code&gt;  和  &lt;code&gt;GB28181&lt;/code&gt;  协议的摄像头&lt;/li&gt;
&lt;li&gt;密码机（包含&lt;code&gt;UKey&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;受测平台服务器&lt;/li&gt;
&lt;li&gt;受测平台客户端&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中，摄像头需要厂家拥有 &lt;code&gt;GB35114&lt;/code&gt; 的资质，密码机需要拥有国密相关资质，需厂家提供摄像头和密码机的产品型号、国家认证的相关资质证书供检测中心在平台认证检测时进行核验。&lt;br&gt;密码机不建议使用软件方式实现，因资质问题，属于非法使用国密标准，检测中心可能不予承认。&lt;br&gt;针对密码机需要进行二次的业务开发，实现证书签发、证书验签、密码检测等功能。&lt;br&gt;除受测平台的服务器需要满足安全要求外，受测平台的客户端同样也需要通过 &lt;code&gt;UKey&lt;/code&gt; 的认证以及使用安全的传输协议和客户端进行通信。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Windows 平台使用 gSOAP 生成 ONVIF 框架代码</title>
    <link href="https://octocat9lee.github.io/2022/01/19/Windows-%E5%B9%B3%E5%8F%B0%E4%BD%BF%E7%94%A8-gSOAP-%E7%94%9F%E6%88%90-ONVIF-%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81/"/>
    <id>https://octocat9lee.github.io/2022/01/19/Windows-平台使用-gSOAP-生成-ONVIF-框架代码/</id>
    <published>2022-01-19T02:35:27.000Z</published>
    <updated>2023-04-04T03:41:50.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="gSOAP"><a href="#gSOAP" class="headerlink" title="gSOAP"></a><code>gSOAP</code></h1><p><code>gSOAP</code> 官方网址：<a href="http://www.cs.fsu.edu/~engelen/soap.html">http://www.cs.fsu.edu/~engelen/soap.html</a><br><code>gSOAP</code> 下载地址：<a href="https://sourceforge.net/projects/gsoap2/files/">https://sourceforge.net/projects/gsoap2/files/</a><br>在 <code>Windows</code> 平台，<code>gsoap_2.8.118.zip</code> 版本因部分变量未声明，会导致生成 <code>ONVIF</code> 源码失败，其他版本可以生成成功。</p><span id="more"></span><h1 id="wsdl2h-和-soapcpp2-简介"><a href="#wsdl2h-和-soapcpp2-简介" class="headerlink" title="wsdl2h 和 soapcpp2 简介"></a><code>wsdl2h</code> 和 <code>soapcpp2</code> 简介</h1><p>要用 <code>gSOAP</code> 生成 <code>ONVIF</code> 源码，必须用到 <code>wsdl2h</code> 和 <code>soapcpp2</code> 两个工具（执行文件）。其中 <code>wsdl2h</code> 工具用于生成 <code>ONVIF</code> 框架头文件，<code>soapcpp2</code> 工具生成 <code>ONVIF</code> 框架源码。</p><h1 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h1><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>将下载的 <code>gSOAP</code> 工具解压至本地目录，进入 <code>gsoap_2.8.117\gsoap-2.8\gsoap\bin\win64</code> 目录，在目录中创建 <code>wsdl</code>, <code>onvifgen</code>, <code>runtime</code> 文件夹。 </p><h2 id="下载-wsdl"><a href="#下载-wsdl" class="headerlink" title="下载 wsdl"></a>下载 <code>wsdl</code></h2><p><code>wsdl</code> 下载地址：<a href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</a><br>根据需要 <code>ONVIF</code> 特性下载所需的 <code>wsdl</code> 文件，保存至 <code>wsdl</code> 文件夹。</p><h2 id="生成-C-代码"><a href="#生成-C-代码" class="headerlink" title="生成 C++ 代码"></a>生成 <code>C++</code> 代码</h2><ul><li><p>取消注释 <code>gsoap_2.8.117\gsoap-2.8\gsoap</code> 目录中 <code>typemap.dat</code> 关于 <code>xsd__duration</code> 的注释。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsd__duration = <span class="comment">#import &quot;custom/duration.h&quot; | xsd__duration</span></span><br></pre></td></tr></table></figure></li><li><p>打开命令行管理工具，进入 <code>gsoap_2.8.117\gsoap-2.8\gsoap\bin\win64</code> 目录，执行如下命令生成 <code>ONVIF</code> 框架头文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsdl2h -o onvif.h -t ../../typemap.dat ./wsdl/accesscontrol.wsdl ./wsdl/accessrules.wsdl ./wsdl/actionengine.wsdl ./wsdl/advancedsecurity.wsdl ./wsdl/analytics.wsdl ./wsdl/analyticsdevice.wsdl ./wsdl/appmgmt.wsdl ./wsdl/authenticationbehavior.wsdl ./wsdl/bw-2-vs-mod.wsdl ./wsdl/credential.wsdl ./wsdl/deviceio.wsdl ./wsdl/devicemgmt.wsdl ./wsdl/display.wsdl ./wsdl/display2.wsdl ./wsdl/doorcontrol.wsdl ./wsdl/event.wsdl ./wsdl/event-vs.wsdl ./wsdl/federatedsearch.wsdl ./wsdl/imaging.wsdl ./wsdl/media.wsdl ./wsdl/media2.wsdl ./wsdl/provisioning.wsdl ./wsdl/ptz.wsdl ./wsdl/receiver.wsdl ./wsdl/recording.wsdl ./wsdl/replay.wsdl ./wsdl/schedule.wsdl ./wsdl/search.wsdl ./wsdl/security.wsdl ./wsdl/thermal.wsdl ./wsdl/uplink.wsdl ./wsdl/remotediscovery.wsdl</span><br></pre></td></tr></table></figure><p>编译成功后，在 <code>win64</code> 目录中，将生成 <code>onvif.h</code> 文件。</p></li><li><p>支持认证，有些 <code>ONVIF</code> 接口调用时需要携带认证信息，要使用 <code>soap_wsse_add_UsernameTokenDigest</code> 函数进行授权，所以要在 <code>onvif.h</code> 头文件开头加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import &quot;wsse.h&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>头文件修改完成后，使用如下命令产生框架代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soapcpp2 -2 -L -x -i -f10 -I../../ -I../../import -I../../custom -d./onvifgen onvif.h</span><br></pre></td></tr></table></figure><p>命令执行成功后，将在 <code>onvifgen</code> 目录下生成 <code>ONVIF</code> 框架源码。</p></li><li><p>复制其他运行所需头文件至 <code>runtime</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> ..\..\dom.cpp .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\stdsoap2.cpp .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\stdsoap2.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\custom\duration.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\custom\duration.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\custom\struct_timeval.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\custom\struct_timeval.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\mecevp.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\mecevp.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\smdevp.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\smdevp.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\threads.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\threads.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\wsaapi.c .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\wsaapi.h .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\wsseapi.cpp .\runtime</span><br><span class="line"><span class="built_in">cp</span> ..\..\plugin\wsseapi.h .\runtime</span><br></pre></td></tr></table></figure></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/benkaoya/article/details/72424335">CSDN|ONVIF协议网络摄像机（IPC）客户端程序开发</a><br><a href="https://github.com/linkingvision/rapidonvif">Github|rapidonvif</a><br><a href="https://www.genivia.com/examples/onvif/index.html">gSOAP|ONVIF官方使用示例</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;gSOAP&quot;&gt;&lt;a href=&quot;#gSOAP&quot; class=&quot;headerlink&quot; title=&quot;gSOAP&quot;&gt;&lt;/a&gt;&lt;code&gt;gSOAP&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;gSOAP&lt;/code&gt; 官方网址：&lt;a href=&quot;http://www.cs.fsu.edu/~engelen/soap.html&quot;&gt;http://www.cs.fsu.edu/~engelen/soap.html&lt;/a&gt;&lt;br&gt;&lt;code&gt;gSOAP&lt;/code&gt; 下载地址：&lt;a href=&quot;https://sourceforge.net/projects/gsoap2/files/&quot;&gt;https://sourceforge.net/projects/gsoap2/files/&lt;/a&gt;&lt;br&gt;在 &lt;code&gt;Windows&lt;/code&gt; 平台，&lt;code&gt;gsoap_2.8.118.zip&lt;/code&gt; 版本因部分变量未声明，会导致生成 &lt;code&gt;ONVIF&lt;/code&gt; 源码失败，其他版本可以生成成功。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>小学义务教育</title>
    <link href="https://octocat9lee.github.io/2021/03/26/%E5%B0%8F%E5%AD%A6%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2/"/>
    <id>https://octocat9lee.github.io/2021/03/26/小学义务教育/</id>
    <published>2021-03-26T08:46:26.000Z</published>
    <updated>2023-04-04T03:41:50.804Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><pre><code>整理个人收集小学义务教育阶段相关教育资源，持续更新。</code></pre><span id="more"></span><h1 id="语文"><a href="#语文" class="headerlink" title="语文"></a>语文</h1><h2 id="魏书生"><a href="#魏书生" class="headerlink" title="魏书生"></a>魏书生</h2><h2 id="于漪"><a href="#于漪" class="headerlink" title="于漪"></a>于漪</h2><h1 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h1><h1 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h1><h2 id="廖彩杏"><a href="#廖彩杏" class="headerlink" title="廖彩杏"></a>廖彩杏</h2><h2 id="盖兆泉"><a href="#盖兆泉" class="headerlink" title="盖兆泉"></a>盖兆泉</h2>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;整理个人收集小学义务教育阶段相关教育资源，持续更新。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>shell 实现 TCP 重传率监测</title>
    <link href="https://octocat9lee.github.io/2021/03/25/shell-%E5%AE%9E%E7%8E%B0-TCP-%E9%87%8D%E4%BC%A0%E7%8E%87%E7%9B%91%E6%B5%8B/"/>
    <id>https://octocat9lee.github.io/2021/03/25/shell-实现-TCP-重传率监测/</id>
    <published>2021-03-25T02:16:52.000Z</published>
    <updated>2023-04-04T03:41:50.801Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  本文介绍一种使用 shell 统计 TCP 重传率脚本。</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">SHELLDIR=<span class="string">&quot;<span class="subst">$(cd <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span>)</span>&quot;</span> &amp;&amp; pwd)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">tcp_re_ratio</span></span>() &#123;</span><br><span class="line">    netstat -s -t &gt;/tmp/netstat_s 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">    s_r=$(<span class="built_in">cat</span> /tmp/netstat_s | grep <span class="string">&#x27;segments send out&#x27;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    s_re=$(<span class="built_in">cat</span> /tmp/netstat_s | grep <span class="string">&#x27;segments retransmited&#x27;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    [ -e <span class="variable">$&#123;SHELLDIR&#125;</span>/s_r ] || <span class="built_in">touch</span> <span class="variable">$&#123;SHELLDIR&#125;</span>/s_r</span><br><span class="line">    [ -e <span class="variable">$&#123;SHELLDIR&#125;</span>/s_re ] || <span class="built_in">touch</span> <span class="variable">$&#123;SHELLDIR&#125;</span>/s_re</span><br><span class="line"></span><br><span class="line">    l_s_r=$(<span class="built_in">cat</span> <span class="variable">$&#123;SHELLDIR&#125;</span>/s_r)</span><br><span class="line">    l_s_re=$(<span class="built_in">cat</span> <span class="variable">$&#123;SHELLDIR&#125;</span>/s_re)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$s_r</span> &gt;<span class="variable">$&#123;SHELLDIR&#125;</span>/s_r</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$s_re</span> &gt;<span class="variable">$&#123;SHELLDIR&#125;</span>/s_re</span><br><span class="line"></span><br><span class="line">    tcp_re_rate=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$s_r</span> <span class="variable">$s_re</span> <span class="variable">$l_s_r</span> <span class="variable">$l_s_re</span>&quot;</span> | awk <span class="string">&#x27;&#123;printf(&quot;%.2f&quot;,($2-$4)/($1-$3)*100)&#125;&#x27;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$s_r</span> | <span class="variable">$s_re</span> | <span class="variable">$tcp_re_rate</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        tcp_re_ratio</span><br><span class="line">        <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  本文介绍一种使用 shell 统计 TCP 重传率脚本。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>mediasoup部署</title>
    <link href="https://octocat9lee.github.io/2021/01/06/mediasoup%E9%83%A8%E7%BD%B2/"/>
    <id>https://octocat9lee.github.io/2021/01/06/mediasoup部署/</id>
    <published>2021-01-06T05:28:59.000Z</published>
    <updated>2023-04-04T03:41:50.798Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文记录个人在 <code>Ubuntu 16.04</code> 和 <code>Centos 7</code> 环境下 <code>mediasoup</code> 部署过程，主要涉及编译环境搭建，依赖模块安装，公网 <code>IP</code> 和端口配置以及 <code>HTTPS</code> 设置等关键步骤。</p><span id="more"></span><h1 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h1><h2 id="操作系统和-nodejs-版本信息"><a href="#操作系统和-nodejs-版本信息" class="headerlink" title="操作系统和 nodejs 版本信息"></a>操作系统和 nodejs 版本信息</h2><p>操作系统配置信息：<br><code>Centos 7</code> 版本信息：</p><blockquote><p>CentOS Linux release 7.4.1708 (Core)</p></blockquote><p><code>Ubuntu 16.04</code> 版本信息：</p><blockquote><p>Ubuntu 16.04.7 LTS<br>gcc 5.4.0 20160609<br>g++ 5.4.0 20160609</p></blockquote><p><code>Nodejs 和 npm</code> 版本信息：</p><blockquote><p>Node: v10.15.2<br>NPM: 6.4.1</p></blockquote><h2 id="Centos-GCC-升级"><a href="#Centos-GCC-升级" class="headerlink" title="Centos GCC 升级"></a>Centos GCC 升级</h2><p>因 mediasoup 编译要求 <code>GCC</code> 版本大于 <code>4.8</code>，但 <code>Centos 7.4</code> 通过 <code>yum</code> 安装的 <code>GCC</code> 版本为 <code>4.8.5</code>，不能够直接编译 <code>mediasoup</code> 使用的 <code>mediasoup-worker</code> 程序。所以，需要对 <code>GCC</code> 版本进行升级处理。具体的操作步骤如下：</p><ul><li><p>安装 <code>SCL</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y centos-release-scl</span><br></pre></td></tr></table></figure></li><li><p>安装 <code>GCC</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br></pre></td></tr></table></figure></li><li><p>启动 <code>GCC</code>（临时）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl <span class="built_in">enable</span> devtoolset-9 bash</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>完成 <code>mediasoup-worker</code> 程序编译后，请关闭 <code>shell</code> 终端，不再使用 <code>9.3.1</code> 版本 <code>GCC</code>，因为 <code>SCL</code> 仅升级了 <code>GCC</code> 版本，并未升级 <code>libstdc++</code> 和 <code>libc</code> 依赖库。如果继续使用 <code>9.3.1</code> 版本 <code>GCC</code> 将导致 <code>mediasoup-worker</code> 程序在启动时找不到高版本的库函数，例如提示 <code>libstdc++.so.6: version </code>GLIBCXX_版本号’ not found 和 libc.so.6: version <code>GLIBC_版本号&#39; not found</code>。个人因为永久启动高版本 <code>GCC</code>，差点对 <code>libstdc++.so.6</code> 升级处理。</p></blockquote><h2 id="python-升级"><a href="#python-升级" class="headerlink" title="python 升级"></a>python 升级</h2><p><code>mediasoup</code> 要求 <code>python</code> 版本高于 <code>3.7</code>，因此需要对 <code>python</code> 进行升级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br><span class="line">apt-get install python3.7</span><br><span class="line">update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2</span><br><span class="line">update-alternatives --config python3</span><br><span class="line">python3 --version</span><br><span class="line">apt-get install python3-pip</span><br></pre></td></tr></table></figure><h2 id="生成自签名-HTTPS-证书"><a href="#生成自签名-HTTPS-证书" class="headerlink" title="生成自签名 HTTPS 证书"></a>生成自签名 <code>HTTPS</code> 证书</h2><p>使用如下名称生成 <code>HTTPS</code> 协议使用的公钥和私钥对，其中key表示私钥，crt表示公钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -newkey rsa:1024 -x509 -sha256 -days 3650 -nodes -out fullchain.pem -keyout privkey.pem</span><br></pre></td></tr></table></figure><p>生成证书后，将证书和私钥文件复制到 <code>mediasoup-demo/server/certs</code> 目录下。</p><h1 id="mediasoup-部署"><a href="#mediasoup-部署" class="headerlink" title="mediasoup 部署"></a>mediasoup 部署</h1><ul><li><p>克隆项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/versatica/mediasoup-demo.git</span><br><span class="line"><span class="built_in">cd</span> mediasoup-demo</span><br><span class="line">git checkout v3</span><br></pre></td></tr></table></figure></li><li><p>安装<code>Server</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> server</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>该步骤会下载 <code>node</code> 需要的 <code>node_modules</code>，其中 <code>c++</code> 部分的 <code>mediasoup</code> 代码会下载到 <code>mediasoup-demo/server/node_modules/mediasoup</code> 目录下，这个目录其实就是 <code>mediasoup</code> ，这个项目 <code>worker</code> 目录下是 <code>c++</code>，修改后直接 <code>make</code> 就可以。</p></li></ul><p>如果使用 <code>npm install</code> 安装 <code>server</code> 的 <code>mediasoup</code> 失败，可考虑使用如下操作方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 npm 安装源为淘宝源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="built_in">cd</span> server</span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 使用 package.json 安装失败后，单独安装 mediasoup</span></span><br><span class="line">npm install mediasoup@3 --save</span><br></pre></td></tr></table></figure><ul><li><p>安装浏览器 <code>app</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> app</span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 若安装失败，尝试执行如下命令安装：</span></span><br><span class="line">npm install --unsafe-perm</span><br></pre></td></tr></table></figure></li><li><p>全局安装 <code>gulp</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g gulp-cli</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h2><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>复制 <code>mediasoup-demo/server/config.example.js</code> 重命名 <code>config.js</code>，修改后的配置文件示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * IMPORTANT (PLEASE READ THIS):</span><br><span class="line"> *</span><br><span class="line"> * This is not the <span class="string">&quot;configuration file&quot;</span> of mediasoup. This is the configuration</span><br><span class="line"> * file of the mediasoup-demo app. mediasoup itself is a server-side library, it</span><br><span class="line"> * does not <span class="built_in">read</span> any <span class="string">&quot;configuration file&quot;</span>. Instead it exposes an API. This demo</span><br><span class="line"> * application just reads settings from this file (once copied to config.js) and</span><br><span class="line"> * calls the mediasoup API with those settings when appropriate.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">const os = require(<span class="string">&#x27;os&#x27;</span>);</span><br><span class="line"></span><br><span class="line">module.exports =</span><br><span class="line">&#123;</span><br><span class="line">    // Listening hostname (just <span class="keyword">for</span> `gulp live` task).</span><br><span class="line">    domain : process.env.DOMAIN || <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    // Signaling settings (protoo WebSocket server and HTTP API server).</span><br><span class="line">    https  :</span><br><span class="line">    &#123;</span><br><span class="line">        listenIp   : <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">        // NOTE: Don<span class="string">&#x27;t change listenPort (client app assumes 4443).</span></span><br><span class="line"><span class="string">        listenPort : process.env.PROTOO_LISTEN_PORT || 15025,</span></span><br><span class="line"><span class="string">        // NOTE: Set your own valid certificate files.</span></span><br><span class="line"><span class="string">        tls        :</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            cert : process.env.HTTPS_CERT_FULLCHAIN || `$&#123;__dirname&#125;/certs/fullchain.pem`,</span></span><br><span class="line"><span class="string">            key  : process.env.HTTPS_CERT_PRIVKEY || `$&#123;__dirname&#125;/certs/privkey.pem`</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    // mediasoup settings.</span></span><br><span class="line"><span class="string">    mediasoup :</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        // Number of mediasoup workers to launch.</span></span><br><span class="line"><span class="string">        numWorkers     : Object.keys(os.cpus()).length,</span></span><br><span class="line"><span class="string">        // mediasoup WorkerSettings.</span></span><br><span class="line"><span class="string">        // See https://mediasoup.org/documentation/v3/mediasoup/api/#WorkerSettings</span></span><br><span class="line"><span class="string">        workerSettings :</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            logLevel : &#x27;</span>warn<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">            logTags  :</span></span><br><span class="line"><span class="string">            [</span></span><br><span class="line"><span class="string">                &#x27;</span>info<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>ice<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>dtls<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>rtp<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>srtp<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>rtcp<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>rtx<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>bwe<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>score<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>simulcast<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>svc<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                &#x27;</span>sctp<span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ],</span></span><br><span class="line"><span class="string">            rtcMinPort : process.env.MEDIASOUP_MIN_PORT || 15026,</span></span><br><span class="line"><span class="string">            rtcMaxPort : process.env.MEDIASOUP_MAX_PORT || 15038</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        // mediasoup Router options.</span></span><br><span class="line"><span class="string">        // See https://mediasoup.org/documentation/v3/mediasoup/api/#RouterOptions</span></span><br><span class="line"><span class="string">        routerOptions :</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            mediaCodecs :</span></span><br><span class="line"><span class="string">            [</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    kind      : &#x27;</span>audio<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    mimeType  : &#x27;</span>audio/opus<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    clockRate : 48000,</span></span><br><span class="line"><span class="string">                    channels  : 2</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    kind       : &#x27;</span>video<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    mimeType   : &#x27;</span>video/VP8<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    clockRate  : 90000,</span></span><br><span class="line"><span class="string">                    parameters :</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        &#x27;</span>x-google-start-bitrate<span class="string">&#x27; : 4000</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    kind       : &#x27;</span>video<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    mimeType   : &#x27;</span>video/VP9<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    clockRate  : 90000,</span></span><br><span class="line"><span class="string">                    parameters :</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        &#x27;</span>profile-id<span class="string">&#x27;             : 2,</span></span><br><span class="line"><span class="string">                        &#x27;</span>x-google-start-bitrate<span class="string">&#x27; : 4000</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    kind       : &#x27;</span>video<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    mimeType   : &#x27;</span>video/h264<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    clockRate  : 90000,</span></span><br><span class="line"><span class="string">                    parameters :</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        &#x27;</span>packetization-mode<span class="string">&#x27;      : 1,</span></span><br><span class="line"><span class="string">                        &#x27;</span>profile-level-id<span class="string">&#x27;        : &#x27;</span>4d0032<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                        &#x27;</span>level-asymmetry-allowed<span class="string">&#x27; : 1,</span></span><br><span class="line"><span class="string">                        &#x27;</span>x-google-start-bitrate<span class="string">&#x27;  : 4000</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    kind       : &#x27;</span>video<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    mimeType   : &#x27;</span>video/h264<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    clockRate  : 90000,</span></span><br><span class="line"><span class="string">                    parameters :</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        &#x27;</span>packetization-mode<span class="string">&#x27;      : 1,</span></span><br><span class="line"><span class="string">                        &#x27;</span>profile-level-id<span class="string">&#x27;        : &#x27;</span>42e01f<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                        &#x27;</span>level-asymmetry-allowed<span class="string">&#x27; : 1,</span></span><br><span class="line"><span class="string">                        &#x27;</span>x-google-start-bitrate<span class="string">&#x27;  : 4000</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            ]</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        // mediasoup WebRtcTransport options for WebRTC endpoints (mediasoup-client,</span></span><br><span class="line"><span class="string">        // libmediasoupclient).</span></span><br><span class="line"><span class="string">        // See https://mediasoup.org/documentation/v3/mediasoup/api/#WebRtcTransportOptions</span></span><br><span class="line"><span class="string">        webRtcTransportOptions :</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            listenIps :</span></span><br><span class="line"><span class="string">            [</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    ip          : process.env.MEDIASOUP_LISTEN_IP || &#x27;</span>192.168.104.8<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                    announcedIp : process.env.MEDIASOUP_ANNOUNCED_IP || &#x27;</span>10.12.13.14<span class="string">&#x27;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            ],</span></span><br><span class="line"><span class="string">            initialAvailableOutgoingBitrate : 40000000,</span></span><br><span class="line"><span class="string">            minimumAvailableOutgoingBitrate : 6000000,</span></span><br><span class="line"><span class="string">            maxSctpMessageSize              : 262144,</span></span><br><span class="line"><span class="string">            // Additional options that are not part of WebRtcTransportOptions.</span></span><br><span class="line"><span class="string">            maxIncomingBitrate              : 15000000</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        // mediasoup PlainTransport options for legacy RTP endpoints (FFmpeg,</span></span><br><span class="line"><span class="string">        // GStreamer).</span></span><br><span class="line"><span class="string">        // See https://mediasoup.org/documentation/v3/mediasoup/api/#PlainTransportOptions</span></span><br><span class="line"><span class="string">        plainTransportOptions :</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            listenIp :</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                ip          : process.env.MEDIASOUP_LISTEN_IP || &#x27;</span>192.168.104.8<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">                announcedIp : process.env.MEDIASOUP_ANNOUNCED_IP || &#x27;</span>10.12.13.14<span class="string">&#x27;</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            maxSctpMessageSize : 262144</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br></pre></td></tr></table></figure><p>主要包括修改 <code>HTTPS</code> 监听端口为 15025，<code>RTP</code> 传输端口范围为 <code>15026~15038</code>，并设置公网IP，其中 <code>192.168.104.8</code> 表示部署机器 <code>IP</code> 地址,<code>10.12.13.14</code> 表示公网 <code>IP</code> 地址。</p><p>若使用默认端口，因为在环境变量中没有对 <code>MEDIASOUP_LISTEN_IP</code> 和 <code>MEDIASOUP_ANNOUNCED_IP</code> 进行设置，所以，需要将 <code>config.js</code> 中的 <code>0.0.0.0</code> 的 <code>IP</code> 地址进行设置，否则实时视频通话会失败。在默认端口情形下，配置设置类似如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listenIp :</span><br><span class="line">&#123;</span><br><span class="line">    ip          : process.env.MEDIASOUP_LISTEN_IP || <span class="string">&#x27;192.168.104.8&#x27;</span>,</span><br><span class="line">    announcedIp : process.env.MEDIASOUP_ANNOUNCED_IP || <span class="string">&#x27;192.168.104.8&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>因为客户端默认监听在 3000 端口，当需要更该客户端默认监听端口时，需在 <code>mediasoup-demo/app/gulpfile.js</code> 文件中的 <code>browserSync</code> 添加端口配置，具体方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">browserSync(</span><br><span class="line">    &#123;</span><br><span class="line">        open      : <span class="string">&#x27;external&#x27;</span>,</span><br><span class="line">        host      : config.domain,</span><br><span class="line">        port      : 15024,</span><br><span class="line">        startPath : <span class="string">&#x27;/?info=true&#x27;</span>,</span><br><span class="line">        server    :</span><br><span class="line">        &#123;</span><br><span class="line">            baseDir : OUTPUT_DIR</span><br><span class="line">        &#125;,</span><br><span class="line">        https     : config.https.tls,</span><br><span class="line">        ghostMode : <span class="literal">false</span>,</span><br><span class="line">        files     : path.join(OUTPUT_DIR, <span class="string">&#x27;**&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>因服务器端将 <code>HTTPS</code> 监听端口设置为 15025，所以客户端代码亦需要修改对应端口，修改 <code>mediasoup-demo/app/lib/urlFactory.js</code> 文件中的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> protooPort = 15025;</span><br></pre></td></tr></table></figure><p>修改完成后，在 <code>mediasoup-demo/app</code> 路径下执行 <code>gulp</code> 命令打包客户端代码。客户端代码打包成功后，前端客户端页面会发布到 <code>mediasoup-demo/server/public</code> 路径下。</p><p>完成配置修改后，客户端将对 <code>15024</code> 端口进行监听服务。</p><h2 id="Nginx-发布-app"><a href="#Nginx-发布-app" class="headerlink" title="Nginx 发布 app"></a><code>Nginx</code> 发布 <code>app</code></h2><p>为简化 <code>app</code> 的发布，因此使用 <code>nginx</code> 部署 <code>HTTPS</code> 服务器，发布客户端。<br>其中 <code>/home/mediasoup/mediasoup-demo/server/public</code> 目录为客户端发布目录。<br><code>nginx</code> 配置如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">worker_processes auto;</span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">  sendfile off;</span><br><span class="line">  tcp_nopush on;</span><br><span class="line">  directio 512;</span><br><span class="line">  include /opt/nginx/conf/mime.types;</span><br><span class="line">  <span class="comment"># aio on;</span></span><br><span class="line"></span><br><span class="line">  gzip on;</span><br><span class="line"></span><br><span class="line">  gzip_vary on;</span><br><span class="line">  gzip_proxied any;</span><br><span class="line">  gzip_comp_level 6;</span><br><span class="line">  gzip_buffers 16 8k;</span><br><span class="line">  gzip_http_version 1.1;</span><br><span class="line">  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># HTTP server required to serve the player and HLS fragments</span></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 15024 ssl;</span><br><span class="line">    ssl_certificate /home/mediasoup/mediasoup-demo/server/certs/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /home/mediasoup/mediasoup-demo/server/certs/privkey.pem;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      root /home/mediasoup/mediasoup-demo/server/public;</span><br><span class="line">      try_files <span class="variable">$uri</span> /index.html;</span><br><span class="line">      index index.html index.htm index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(css|gif|ico|jpg|js|png|ttf|woff)$ &#123;</span><br><span class="line">      root /home/mediasoup/mediasoup-demo/server/public;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(eot|otf|ttf|woff|svg)$ &#123;</span><br><span class="line">      add_header Access-Control-Allow-Origin *;</span><br><span class="line">      root /home/mediasoup/mediasoup-demo/server/public;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="服务运行"><a href="#服务运行" class="headerlink" title="服务运行"></a>服务运行</h1><h2 id="启动-mediasoup"><a href="#启动-mediasoup" class="headerlink" title="启动 mediasoup"></a>启动 <code>mediasoup</code></h2><p>使用 <code>nohup</code> 方式启动 <code>mediasoup</code> 后台运行，因某些云服务器在关闭 <code>shell</code> 终端时，同样也会结束 <code>nohup</code> 运行的进程，需要执行 <code>exit</code> 命令退出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> mediasoup-demo/server/</span><br><span class="line"><span class="built_in">nohup</span> node server.js &amp;</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="启动-nginx"><a href="#启动-nginx" class="headerlink" title="启动 nginx"></a>启动 <code>nginx</code></h2><p>启动 <code>nginx</code> 服务器，发布客户端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开浏览器，输入 <code>https:\\10.12.13.14:15024</code> 进入房间。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://github.com/versatica/mediasoup-demo">github mediasoup demo</a><br><a href="https://blog.csdn.net/qq_22948593/article/details/116797801">Ubuntu部署mediasoup</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录个人在 &lt;code&gt;Ubuntu 16.04&lt;/code&gt; 和 &lt;code&gt;Centos 7&lt;/code&gt; 环境下 &lt;code&gt;mediasoup&lt;/code&gt; 部署过程，主要涉及编译环境搭建，依赖模块安装，公网 &lt;code&gt;IP&lt;/code&gt; 和端口配置以及 &lt;code&gt;HTTPS&lt;/code&gt; 设置等关键步骤。&lt;/p&gt;
    
    </summary>
    
    
      <category term="WebRTC" scheme="https://octocat9lee.github.io/tags/WebRTC/"/>
    
  </entry>
  
  <entry>
    <title>数据库使用指南</title>
    <link href="https://octocat9lee.github.io/2020/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://octocat9lee.github.io/2020/10/16/数据库使用指南/</id>
    <published>2020-10-16T09:27:10.000Z</published>
    <updated>2023-04-04T03:41:50.805Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本博客主要记录个人在日常工作中关于 <code>MySQL</code> 数据库常用操作记录。 </p><span id="more"></span><h1 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h1><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>在两个不同的数据表中执行分页查询：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM (</span><br><span class="line">SELECT <span class="built_in">id</span>, parent_id, 2 AS TYPE, region_name, region_code</span><br><span class="line">, 0 AS OnLineStatus, <span class="string">&#x27; &#x27;</span> AS longitude, <span class="string">&#x27; &#x27;</span> AS latitude</span><br><span class="line">FROM m_region</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT <span class="built_in">id</span>, region_id, 1 AS TYPE, monitor_name, dev_code</span><br><span class="line">, online_status, longitude, latitude</span><br><span class="line">FROM m_monitor</span><br><span class="line">WHERE region_id IN (</span><br><span class="line">SELECT <span class="built_in">id</span></span><br><span class="line">FROM m_region</span><br><span class="line">)</span><br><span class="line">) tmp</span><br><span class="line">LIMIT 60, 10</span><br></pre></td></tr></table></figure><p>注意：联合查询后的临时表必须命名，否则查询报错。</p><h2 id="多级联合查询"><a href="#多级联合查询" class="headerlink" title="多级联合查询"></a>多级联合查询</h2><p>查询 <code>m_bussiness</code> 表中使用 <code>parent_id</code> 构造层级关系的多级节点。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT AA.dev_code, AA.monitor_name, AA.business_name AS level1Name, BB.business_name AS level2Name</span><br><span class="line">FROM (</span><br><span class="line">SELECT A.dev_code, A.monitor_name, B.business_name, B.parent_id</span><br><span class="line">FROM m_monitor A</span><br><span class="line">INNER JOIN m_business B ON A.business_id = B.<span class="built_in">id</span></span><br><span class="line">WHERE A.dev_code IN (<span class="string">&#x27;51011700001310000805&#x27;</span>, <span class="string">&#x27;51011700001310000131&#x27;</span>, <span class="string">&#x27;51011700001310000136&#x27;</span>, <span class="string">&#x27;43091700001310000505&#x27;</span>)</span><br><span class="line">) AA</span><br><span class="line">INNER JOIN m_business BB ON AA.parent_id = BB.<span class="built_in">id</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本博客主要记录个人在日常工作中关于 &lt;code&gt;MySQL&lt;/code&gt; 数据库常用操作记录。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C++小功能函数集合</title>
    <link href="https://octocat9lee.github.io/2020/09/30/C-%E5%B0%8F%E5%8A%9F%E8%83%BD%E5%87%BD%E6%95%B0%E9%9B%86%E5%90%88/"/>
    <id>https://octocat9lee.github.io/2020/09/30/C-小功能函数集合/</id>
    <published>2020-09-30T07:16:54.000Z</published>
    <updated>2023-04-04T03:41:50.787Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本篇主要收集在工作中经常使用的小功能函数，与具体项目业务无关，主要涉及诸如字符串处理、字符编码转换等简单功能的小函数。</p><span id="more"></span><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><h3 id="UTF8-和-GB2312-字符集转换"><a href="#UTF8-和-GB2312-字符集转换" class="headerlink" title="UTF8 和 GB2312 字符集转换"></a>UTF8 和 GB2312 字符集转换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">Utf82Gb2312</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* utf8)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, utf8, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="function">std::unique_ptr&lt;<span class="type">wchar_t</span> []&gt; <span class="title">wstr</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(wstr == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(wstr.<span class="built_in">get</span>(), <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, utf8, <span class="number">-1</span>, wstr.<span class="built_in">get</span>(), len);</span><br><span class="line">    len = <span class="built_in">WideCharToMultiByte</span>(CP_ACP, <span class="number">0</span>, wstr.<span class="built_in">get</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="function">std::unique_ptr&lt;<span class="type">char</span> []&gt; <span class="title">str</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(str == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(str.<span class="built_in">get</span>(), <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">WideCharToMultiByte</span>(CP_ACP, <span class="number">0</span>, wstr.<span class="built_in">get</span>(), <span class="number">-1</span>, str.<span class="built_in">get</span>(), len, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">std::string <span class="title">ret</span><span class="params">(str.get())</span></span>;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">Gb23122Utf8</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* gb2312)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, gb2312, <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="function">std::unique_ptr&lt;<span class="type">wchar_t</span> []&gt; <span class="title">wstr</span><span class="params">(<span class="keyword">new</span> <span class="type">wchar_t</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(wstr == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(wstr.<span class="built_in">get</span>(), <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, gb2312, <span class="number">-1</span>, wstr.<span class="built_in">get</span>(), len);</span><br><span class="line">    len = <span class="built_in">WideCharToMultiByte</span>(CP_UTF8, <span class="number">0</span>, wstr.<span class="built_in">get</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="function">std::unique_ptr&lt;<span class="type">char</span> []&gt; <span class="title">str</span><span class="params">(<span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>])</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(str == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(str.<span class="built_in">get</span>(), <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">WideCharToMultiByte</span>(CP_UTF8, <span class="number">0</span>, wstr.<span class="built_in">get</span>(), <span class="number">-1</span>, str.<span class="built_in">get</span>(), len, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="function">std::string <span class="title">ret</span><span class="params">(str.get())</span></span>;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><h3 id="获取字符串对应的十六进制字符串"><a href="#获取字符串对应的十六进制字符串" class="headerlink" title="获取字符串对应的十六进制字符串"></a>获取字符串对应的十六进制字符串</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">String2Hex</span><span class="params">(<span class="type">const</span> std::string&amp; input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span> hex_digits[] = <span class="string">&quot;0123456789ABCDEF&quot;</span>;</span><br><span class="line"></span><br><span class="line">    std::string output;</span><br><span class="line">    output.<span class="built_in">reserve</span>(input.<span class="built_in">length</span>() * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">unsigned</span> <span class="type">char</span> c : input)</span><br><span class="line">    &#123;</span><br><span class="line">        output.<span class="built_in">push_back</span>(hex_digits[c &gt;&gt; <span class="number">4</span>]);</span><br><span class="line">        output.<span class="built_in">push_back</span>(hex_digits[c &amp; <span class="number">15</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="使用-libcurl-上传文件"><a href="#使用-libcurl-上传文件" class="headerlink" title="使用 libcurl 上传文件"></a>使用 libcurl 上传文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">FuncWriteResp</span><span class="params">(<span class="type">void</span> *buffer, <span class="type">size_t</span> size, <span class="type">size_t</span> nmemb, <span class="type">void</span> *userp)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">size_t</span> dataLen = size * nmemb;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> *str = dynamic_cast&lt;<span class="built_in">std</span>::<span class="built_in">string</span>*&gt;((<span class="built_in">std</span>::<span class="built_in">string</span> *)userp);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0</span> == dataLen || nullptr == str || nullptr == buffer)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    str-&gt;append((<span class="type">char</span>*)buffer, dataLen);</span><br><span class="line">    <span class="keyword">return</span> dataLen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">CurlPostUploadFile</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title function_">filename</span><span class="params">(<span class="string">&quot;log.txt&quot;</span>)</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title function_">strUrl</span><span class="params">(<span class="string">&quot;http://124.225.155.39:5030/upload/broadcast_resource&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> result = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> response;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">curl_httppost</span> *<span class="title">formpost</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">curl_httppost</span> *<span class="title">lastptr</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">curl_slist</span> *<span class="title">headers</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    curl_formadd(&amp;formpost, &amp;lastptr, CURLFORM_PTRNAME, <span class="string">&quot;file&quot;</span>, CURLFORM_FILE, filename.c_str(), CURLFORM_END);</span><br><span class="line"></span><br><span class="line">    CURL *curl = curl_easy_init();</span><br><span class="line">    headers = curl_slist_append(headers, <span class="string">&quot;Content-Type:multipart/form-data&quot;</span>);</span><br><span class="line"></span><br><span class="line">    curl_easy_setopt(curl, CURLOPT_URL, strUrl.c_str());</span><br><span class="line">    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);</span><br><span class="line">    curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);</span><br><span class="line">    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, FuncWriteResp);</span><br><span class="line">    curl_easy_setopt(curl, CURLOPT_WRITEDATA, (<span class="type">void</span>*)&amp;response);</span><br><span class="line"></span><br><span class="line">    CURLcode res = curl_easy_perform(curl);</span><br><span class="line">    <span class="keyword">if</span>(CURLE_OK != res)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;upload curl error, url: %s, error info:&quot;</span>, strUrl.c_str(), curl_easy_strerror(res));</span><br><span class="line">        result = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;upload failed, response: %s&quot;</span>, response.c_str());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(headers)</span><br><span class="line">    &#123;</span><br><span class="line">        curl_slist_free_all(headers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(formpost)</span><br><span class="line">    &#123;</span><br><span class="line">        curl_formfree(formpost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    curl_easy_cleanup(curl);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义-TCP-协议解析"><a href="#自定义-TCP-协议解析" class="headerlink" title="自定义 TCP 协议解析"></a>自定义 TCP 协议解析</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;WinSock.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span>  comment(lib, <span class="string">&quot;ws2_32&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(push,1)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">TcpHeader</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> type;</span><br><span class="line">    <span class="type">uint32_t</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(pop)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReadFile</span><span class="params">(<span class="type">const</span> std::string &amp;path, <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> *dst, <span class="type">int</span> &amp;length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *file = <span class="built_in">fopen</span>(path.<span class="built_in">c_str</span>(), <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(file == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        length = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fseek</span>(file, <span class="number">0</span>, SEEK_END);</span><br><span class="line"></span><br><span class="line">    length = <span class="built_in">ftell</span>(file);</span><br><span class="line">    <span class="built_in">rewind</span>(file);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fread</span>((<span class="type">void</span>*)dst, <span class="number">1</span>, length, file);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fclose</span>(file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SaveFile</span><span class="params">(<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> *h264, <span class="type">const</span> <span class="type">int</span> &amp;length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *file = <span class="built_in">fopen</span>(<span class="string">&quot;D:\\parseTCP\\accesss.h264&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(file != <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fwrite</span>(h264, length, <span class="number">1</span>, file);</span><br><span class="line">        <span class="built_in">fclose</span>(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SaveFileAppend</span><span class="params">(<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> *h264, <span class="type">const</span> <span class="type">int</span> &amp;length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *file = <span class="built_in">fopen</span>(<span class="string">&quot;D:\\parseTCP\\ott.h264&quot;</span>, <span class="string">&quot;ab+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(file != <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fwrite</span>(h264, length, <span class="number">1</span>, file);</span><br><span class="line">        <span class="built_in">fclose</span>(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ParsePrivateTcp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof of tcp header %d\n&quot;</span>, <span class="built_in">sizeof</span>(TcpHeader));</span><br><span class="line">    <span class="type">int</span> size = <span class="number">50</span> * <span class="number">1024</span> * <span class="number">1024</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *buff = <span class="keyword">new</span> <span class="type">unsigned</span> <span class="type">char</span>[size];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *h264 = <span class="keyword">new</span> <span class="type">unsigned</span> <span class="type">char</span>[size];</span><br><span class="line">    <span class="built_in">memset</span>(buff, <span class="number">0</span>, size);</span><br><span class="line">    <span class="built_in">memset</span>(h264, <span class="number">0</span>, size);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> fileLen = <span class="number">0</span>;</span><br><span class="line">    <span class="function">std::string <span class="title">path</span><span class="params">(<span class="string">&quot;D:\\parseTCP\\access.tcp&quot;</span>)</span></span>;</span><br><span class="line">    <span class="built_in">ReadFile</span>(path, buff, fileLen);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> h264Offset = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> offset = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(offset &lt; fileLen)</span><br><span class="line">    &#123;</span><br><span class="line">        TcpHeader *header = (TcpHeader*)(buff + offset);</span><br><span class="line">        <span class="type">uint32_t</span> type = <span class="built_in">ntohl</span>(header-&gt;type);</span><br><span class="line">        <span class="type">uint32_t</span> len = <span class="built_in">ntohl</span>(header-&gt;length);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;heder type %u, length %u\n&quot;</span>, type, len);</span><br><span class="line">        <span class="keyword">if</span>(type == <span class="number">101</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(h264 + h264Offset, buff + offset + <span class="built_in">sizeof</span>(TcpHeader) + <span class="number">8</span>, len - <span class="number">8</span>);</span><br><span class="line">            h264Offset = h264Offset + len - <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        offset = offset + <span class="built_in">sizeof</span>(TcpHeader) + len;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;h264 length %u\n&quot;</span>, h264Offset);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">SaveFile</span>(h264, h264Offset);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span>[] buff;</span><br><span class="line">    <span class="keyword">delete</span>[] h264;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TcpServer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SOCKET serversoc;</span><br><span class="line">    SOCKET clientsoc;</span><br><span class="line">    SOCKADDR_IN serveraddr;</span><br><span class="line">    SOCKADDR_IN clientaddr;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> buf[<span class="number">2048</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line"></span><br><span class="line">    WSADATA wsa;</span><br><span class="line">    <span class="built_in">WSAStartup</span>(<span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">0</span>), &amp;wsa);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>((serversoc = <span class="built_in">socket</span>(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;create server socket failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    serveraddr.sin_family = AF_INET;</span><br><span class="line">    serveraddr.sin_port = <span class="built_in">htons</span>(<span class="number">5678</span>);</span><br><span class="line">    serveraddr.sin_addr.S_un.S_addr = <span class="built_in">htonl</span>(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">bind</span>(serversoc, (SOCKADDR *)&amp;serveraddr, <span class="built_in">sizeof</span>(serveraddr)) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bind failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;listen on 5678 port...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">listen</span>(serversoc, <span class="number">1</span>) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;listen failed!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">sizeof</span>(SOCKADDR_IN);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>((clientsoc = <span class="built_in">accept</span>(serversoc, (SOCKADDR *)&amp;clientaddr, &amp;len)) &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept failed!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;connect success...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line">        <span class="type">int</span> recvlen = <span class="built_in">recv</span>(clientsoc, (<span class="type">char</span> *)buf, <span class="number">2048</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(recvlen &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;close socket\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;recv len: %d\n&quot;</span>, recvlen);</span><br><span class="line">        <span class="built_in">SaveFileAppend</span>(buf, recvlen);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">closesocket</span>(clientsoc);</span><br><span class="line">    <span class="built_in">closesocket</span>(serversoc);</span><br><span class="line">    <span class="built_in">WSACleanup</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要收集在工作中经常使用的小功能函数，与具体项目业务无关，主要涉及诸如字符串处理、字符编码转换等简单功能的小函数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="https://octocat9lee.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark使用技巧</title>
    <link href="https://octocat9lee.github.io/2020/08/25/Wireshark%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://octocat9lee.github.io/2020/08/25/Wireshark使用技巧/</id>
    <published>2020-08-25T06:02:20.000Z</published>
    <updated>2023-04-04T03:41:50.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span><h1 id="Wireshark插件"><a href="#Wireshark插件" class="headerlink" title="Wireshark插件"></a>Wireshark插件</h1><p>根据IP地址查询其地理位置信息，<a href="https://wiki.wireshark.org/HowToUseGeoIP">具体使用示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Qt开发环境搭建</title>
    <link href="https://octocat9lee.github.io/2020/07/19/Qt%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://octocat9lee.github.io/2020/07/19/Qt开发环境搭建/</id>
    <published>2020-07-19T12:14:23.000Z</published>
    <updated>2023-04-04T03:41:50.794Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Qt-安装"><a href="#Qt-安装" class="headerlink" title="Qt 安装"></a>Qt 安装</h1><ol><li>Qt 官网下载地址：<code>https://download.qt.io/archive/qt/</code></li><li>Visual Studio 插件下载地址：<code>https://download.qt.io/archive/vsaddin/</code></li><li>Qt 目录说明：<figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tools  QtCreator</span><br><span class="line">Qt<span class="number">5.9</span><span class="number">.8</span> 各个版本编译工具<span class="comment">(bin)</span>、头文件<span class="comment">(include)</span>、库文件<span class="comment">(lib)</span>、插件<span class="comment">(plugins)</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="使用-Qt-创建项目"><a href="#使用-Qt-创建项目" class="headerlink" title="使用 Qt 创建项目"></a>使用 Qt 创建项目</h1></li><li>创建项目时不用使用中文路径。</li><li>在跨平台应用程序时，文件名全部使用小写，因为在 Windows 平台文件名不区分大小写，Linux 平台文件名区分大小写。<br><code>*.pro.user</code> 文件指定 Qt 环境，例如 Qt 版本，编译 Visual Studio 版本等，当需要更换编译环境时，可以手工删除该文件，然后重新配置对应的环境。</li><li>pro 文件用于生成 Makefile 文件，Makefile 文件用于编译。</li></ol><h1 id="Qt-Creator-调试"><a href="#Qt-Creator-调试" class="headerlink" title="Qt Creator 调试"></a>Qt Creator 调试</h1><ul><li>Windows 下调试工具安装</li></ul><ol><li>win10 SDK 下载：<code>https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk</code></li><li>在安装过程中仅需要安装 <code>Debugging Tools for Windsows</code>，其他均不需安装。</li><li>安装完成后，在 <code>C:\Program Files (x86)\Microsoft SDKs\Windows Kits\10\Debuggers\x86</code>路径下可以看到调试工具<code>cdb.exe</code>程序。</li><li>在 Qt Creator 工具 -&gt; 选项 -&gt; Kits -&gt; Debuggers 通过手动配置路径方式添加 <code>cdb.exe</code> 文件路径。</li></ol><h1 id="Qt-Creator-项目配置"><a href="#Qt-Creator-项目配置" class="headerlink" title="Qt Creator 项目配置"></a>Qt Creator 项目配置</h1><ul><li><p>添加三方库<br>在 Qt Creator 选择对应的项目，右键选择”添加库”，选择库和头文件路径。<br>在更改 pro 配置之后，执行 qmake，然后执行重新构建。<br>对引入的库进行简单测试。<br>在 pro 文件中使用 <code>$$PWD</code> 表示当前路径。待明确当前路径指 pro 文件所在路径还是 Makefile 文件所在路径。</p><h1 id="VS-QT-项目配置"><a href="#VS-QT-项目配置" class="headerlink" title="VS+QT 项目配置"></a>VS+QT 项目配置</h1><p>在安装好 Visual Studio 关于 Qt 插件后，在 Visual Studio 中创建 Qt 项目。</p></li><li><p> 在 Visual Studio 对项目设置如下几项内容：</p></li></ul><ol><li>常规：输出目录、平台工具集</li><li>调试：工作目录与输出目录一致</li><li>C/C++设置三方头文件目录</li><li>链接器设置三方库文件目录以及引入的库</li></ol><ul><li>在 Visual  Studio 中设置 Qt 项目</li></ul><ol><li>选择 <code>Qt VS Tools</code>中的<code>Convert Project to Qt Tools Project</code>；然后选择<code>Export Project</code>，将创建对应的<code>pro,pri</code>文件；最后选择使用 Qt Creator 打开创建的<code>pro</code>文件。</li><li>在<code>Qt Vs Tools</code>通过 <code>Qt Project Settings</code>重新配置 Qt 项目。</li><li>在<code>Qt Vs Tools</code>中选择<code>Qt Option</code>添加新的版本，然后在解决方案右键选择<code>Change Qt Version</code>更改 Qt 版本。<br>需要注意三方库的版本一致问题。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Qt-安装&quot;&gt;&lt;a href=&quot;#Qt-安装&quot; class=&quot;headerlink&quot; title=&quot;Qt 安装&quot;&gt;&lt;/a&gt;Qt 安装&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Qt 官网下载地址：&lt;code&gt;https://download.qt.io/archive/qt/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio 插件下载地址：&lt;code&gt;https://download.qt.io/archive/vsaddin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Qt 目录说明：&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Tools  QtCreator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Qt&lt;span class=&quot;number&quot;&gt;5.9&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.8&lt;/span&gt; 各个版本编译工具&lt;span class=&quot;comment&quot;&gt;(bin)&lt;/span&gt;、头文件&lt;span class=&quot;comment&quot;&gt;(include)&lt;/span&gt;、库文件&lt;span class=&quot;comment&quot;&gt;(lib)&lt;/span&gt;、插件&lt;span class=&quot;comment&quot;&gt;(plugins)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Qt" scheme="https://octocat9lee.github.io/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>Centos 使用 rsync 同步文件</title>
    <link href="https://octocat9lee.github.io/2020/07/07/Centos-%E4%BD%BF%E7%94%A8-rsync-%E5%90%8C%E6%AD%A5%E6%96%87%E4%BB%B6/"/>
    <id>https://octocat9lee.github.io/2020/07/07/Centos-使用-rsync-同步文件/</id>
    <published>2020-07-07T02:50:23.000Z</published>
    <updated>2023-04-04T03:41:50.790Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用 rsync 在两台 Centos 服务器间同步多个文件夹，并配置定时任务，实现自动同步。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>主服务器：<code>10.0.204.75</code><br>备份服务器：<code>10.0.204.64</code><br>主服务器和备份服务器安装 <code>rsync</code> 软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h1 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h1><p>在主服务器 <code>10.0.204.75</code> 上进行服务器端的配置，<code>rsync</code> 服务端安装完成之后是没有生成 <code>rsync.conf</code> 文件的，需要手动在 <code>/etc</code> 目录下创建 <code>rsyncd.conf</code> 配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rsyncd.conf</span><br></pre></td></tr></table></figure><p>服务端 <code>rsyncd.conf</code> 配置文件示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># global setting</span></span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">use <span class="built_in">chroot</span> = no</span><br><span class="line"><span class="built_in">read</span> only = <span class="built_in">yes</span></span><br><span class="line">hosts allow = 10.0.204.64 10.0.204.75</span><br><span class="line">max connections = 4</span><br><span class="line"><span class="built_in">log</span> file = /var/log/rsyncd.log</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsync.lock</span><br><span class="line">secrets file = /etc/rsyncd.secrets</span><br><span class="line">　　</span><br><span class="line"><span class="comment"># rsync path</span></span><br><span class="line">[rms]</span><br><span class="line">path = /opt/upload</span><br><span class="line">ignore errors</span><br><span class="line">auth <span class="built_in">users</span> = root</span><br><span class="line">comment = rms</span><br><span class="line"></span><br><span class="line">[nginx]</span><br><span class="line">path = /home/nginx/upload</span><br><span class="line">ignore errors</span><br><span class="line">auth <span class="built_in">users</span> = root</span><br><span class="line">comment = nginx</span><br></pre></td></tr></table></figure><p>配置同步的用户名和密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># echo &quot;root:123456&quot; &gt; /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># chown root:root /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># chmod 600 /etc/rsyncd.secrets</span></span><br></pre></td></tr></table></figure><p>启动 <code>rsync</code>，并设置为开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/bin/rsync --daemon</span></span><br><span class="line"><span class="comment"># vi /etc/rc.d/rc.local</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f /var/run/rsyncd.pid</span><br><span class="line">/usr/bin/rsync --daemon</span><br></pre></td></tr></table></figure><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>在备份服务器 <code>10.0.204.64</code> 上生成与服务端对应密码配置文件，注意这里只需要服务器 <code>rsyncd.secrets</code> 中的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># echo &quot;123456&quot; &gt; /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># chown root:root /etc/rsyncd.secrets</span></span><br><span class="line"><span class="comment"># chmod 600 /etc/rsyncd.secrets</span></span><br></pre></td></tr></table></figure><p>在备份服务器端执行同步命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">rsync -au --password-file=/etc/rsyncd.secrets root@10.0.204.75::rms /home/backup/static</span><br><span class="line">rsync -au --password-file=/etc/rsyncd.secrets root@10.0.204.75::nginx /home/backup/static</span><br></pre></td></tr></table></figure><p>建立定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line">00 02 * * * /home/backup/rsync_backup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 rsync 在两台 Centos 服务器间同步多个文件夹，并配置定时任务，实现自动同步。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>孩子把你的手给我之笔记</title>
    <link href="https://octocat9lee.github.io/2020/05/05/%E5%AD%A9%E5%AD%90%E6%8A%8A%E4%BD%A0%E7%9A%84%E6%89%8B%E7%BB%99%E6%88%91%E4%B9%8B%E7%AC%94%E8%AE%B0/"/>
    <id>https://octocat9lee.github.io/2020/05/05/孩子把你的手给我之笔记/</id>
    <published>2020-05-05T10:29:54.000Z</published>
    <updated>2023-04-04T03:41:50.803Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>在沟通中发生这种不幸，常常不是因为缺乏爱心，而是缺乏对孩子的理解；不是因为缺乏智慧，而是缺乏知识。</p><p>我们听到父母在跟客人和陌生人交谈时就是使用那样的语言。那种语言照顾你的感受，而不是对你的行为进行批评。</p><p>父母需要学会把孩子当成客人一样对待。</p><p>为了能达到这些人性的目标，父母需要学习人性的方法。光有爱是不够的，洞察力也不足以胜任，好的父母需要技巧，如何获得并使用这些技巧就是这本书的主要内容，它可以帮助父母把期望的目标转变为每天的实践。</p><span id="more"></span><h1 id="第二章-语言：鼓励和指导的更好方法"><a href="#第二章-语言：鼓励和指导的更好方法" class="headerlink" title="第二章 语言：鼓励和指导的更好方法"></a>第二章 语言：鼓励和指导的更好方法</h1><p>和孩子对话是一门有规则的独特艺术，有它自己的含义。孩子在交谈时很少是无知的，他们的信息里经常有需要解读的密码。</p><p>当我们诚恳地承认孩子的困境，说出他们的失望时，孩子常常会获得面对现实的力量。</p><p>大多数父母试图说服孩子，想让孩子知道他们的抱怨很不公平，他们的想法是错误的，父母们意识不到这种做法没有用，这样做只会导致争论和气愤。</p><p>他们的谈话更像两段独白，一段充满了批评和指令，另一段则全是否认和争辩。这种沟通的悲剧不是因为缺乏爱，而是缺乏相互尊重；不是缺乏才<br>智，而是缺乏技巧。</p><p>和孩子沟通要建立在尊重的基础之上，另外，还要有技巧：需要<br> a）同时照顾孩子和父母的自尊；<br>b）要先说出表示理解的话，然后再提出建议或意见。</p><p>那么如果父母能够学会倾听在他们愤怒的外表下所隐藏的担心、失望和无助，将会有很大的帮助。</p><p>父母不要只针对孩子的行为作出反应，而是要关注他们心烦意乱的情绪，帮助他们应付难题。</p><p>只有当孩子的心情平静时，他们才能正确地思考，才能做出正确的举动。</p><p>当我们对心爱的人有了不好的感觉时，如何才能帮助我们改变这种感觉呢？<br>B：有人能够理解你。不责怪你。<br>A：不用告诉你如何改进。</p><p>当孩子说起或询问一件事情时，最好的反应通常是不要针对事件本身，而是要针对事情暗示的联系。</p><p>许多孩子的问题的真正意图，是他们对放心的渴望。对于这样的问题，最好的回答就是向孩子保证我们对他们永久不变的爱。</p><p>当孩子回到家，不停抱怨他的朋友、老师，或者生活时，最好顺着他的语气回应他，而不要先试图查明事件的真相。</p><p>当孩子对自身做评价时，通常不要只是以赞同或不赞同来回答他，而要用具体的细节来表达超出孩子期望之外的理解。</p><p>当孩子表达了对自己消极、否定的看法时，我们的否定和反对对他没什么帮助，他们会更坚定地确信自己的看法，我们能给予的最大帮助是告诉他，我们不仅理解他的感受，还理解他的特别的暗示。</p><p>孩子爱我们，同时也怨恨我们。他们对于父母、老师以及任何可以管教他们的人都有两种态度。</p><p>父母发现要接受这种又爱又恨的矛盾感情很困难，他们自己不喜欢这样，也不能容忍自己的孩子有这种想法。</p><p>他们认为对人又爱又恨在情感上天生就是错误的，特别是对家人而言。我们可以学着接受我们自己内心以及孩子心中的这种矛盾情感。</p><p>为了避免不必要的冲突，孩子应该知道这样的感情是正常的、自然的。通过承认孩子的这种矛盾情感，并表达出来，可以减少孩子的内疚和焦虑。</p><p>要内心接受这样的概念并不容易，我们儿时的教育和成年之后的教育都倾向于从相反的一面教导我们。</p><p>我们被教导说消极的情绪是“不好的”，我们不应该那么想，我们应该为那样的想法感到羞愧。</p><p>而新的方法认为只能针对具体的事实下判断，不能对那些想像中的“不好的”、“好的”事实妄加评论。</p><p>只有行为才能受到谴责或表扬，而感受不能、也不应受此对待。对感觉下判断，或者对幻想横加指责，不但妨碍个人自由，也会对精神上的健康造成伤害。</p><p>尽管我们无法随意地选择这些情绪，但是，倘若我们知道它们是什么，我们就可以根据自己的意愿选择何时以及如何表达出来，这是问题的关键。</p><p>许多人被教育得不知道自己的真实想法是什么，当他们感到憎恨时，被告知说那只是不喜欢而已；当他们感到害怕时，又被告诉说没什么好害怕的；当他们感到痛苦时，教育<br>建议他们要微笑着勇敢面对。</p><p>我们中的许多人被劝诫在不开心的时候要强作欢颜。在以上的这些矫饰中我们真正该做什么呢？说实话。</p><p>情感教育可以帮助孩子知道他们的真实想法。对孩子来说，知道他怎么想，远比知道他为什么会这么想要重要。当他确确实实知道了他内心的真实感受，那么他的内心就不太可能觉得“一团糟”。</p><p>情感的镜子功能与普通镜子类似，就是要把情感原原本本地映射出来，不变形。“你看上去很生气。”“听起来你非常恨他。”“看起来你好像很讨厌整件事情。”</p><p>在心理疗法中，从不会对孩子说：“你是个好孩子。”或者“你很棒。”</p><p>判断和评价性的赞扬都是要避免的。为什么？因为那样没有用，那些话会使孩子产生焦虑，助长孩子的依赖性，唤起孩子的防御心理，对培养孩子自立、自我指导、自我控制的能力以及不受外界看法影响的品质没有帮助。</p><p>最重要的一条规则就是：只能夸奖孩子的努力和成就，不要夸奖他们的品性和人格。</p><p>下面对孩子品格的赞美之辞是无益的：</p><ul><li>“你真是个好女儿。”</li><li>“你真是妈妈的好帮手。”</li><li>“没有你，妈妈该怎么办呢？”</li></ul><p>学会称赞的步骤称赞包括两个部分：我们对孩子说的话，以及孩子听了我们的话后在心里跟自己说的话。我们的话应该明确表明我们很喜欢、很欣赏他们的努力帮助、工作、体谅、创造或者成就。我们的话应该让孩子能对自己的品格有一个现实的看法。</p><p>当我们希望孩子好受点时，通常就会称赞他们。可是为什么当我们对女儿说“你很漂亮”时她会否认呢？为什么当我们对儿子说“你非常聪明”时他很尴尬地走开呢？是我们的孩子太难取悦，甚至连赞美都不起作用了吗？当然不是。</p><p>最可能的原因是：我们的孩子跟大多数人一样，对于赞美他们品格、身体或精神的话不知如何反应。孩子不喜欢被评定。</p><ul><li><p>有益的称赞：谢谢你洗了车，它看上去又像新的一样了。<br>可能的推论：我的工作做得不错，我的工作受到了赞赏。<br>（无益的称赞：你是一个天使。）</p></li><li><p>有益的称赞：我喜欢你的祝愿康复的卡片，很漂亮，也很风趣。<br>可能的推论：我的品味不错，我可以信赖自己的选择。<br>（无益的称赞：你总是这么体贴。）</p></li><li><p>有益的称赞：你的诗说到我心里去了。<br>可能的推论：我很高兴我能写诗。<br>（无益的称赞：就你的年龄来说，你是个不错的诗人。）</p></li><li><p>有益的称赞：你做的书架看上去很漂亮。<br>可能的推论：我很能干。<br>（无益的称赞：你真是一个好木匠。）</p></li><li><p>有益的称赞：你的信给我带来巨大的欢乐。<br>可能的推论：我可以给别人带来快乐。<br>（无益的称赞：你的写作非常优秀。）</p></li><li><p>有益的称赞：我非常感谢你今天洗了盘子。<br>可能的推论：我很负责。<br>（无益的称赞：你比其他人都做得好。）</p></li><li><p>有益的称赞：谢谢你告诉我我多找了你钱，真的太感谢你了。<br>可能的推论：我很高兴我是诚实的。<br>（无益的称赞：你真是一个诚实的孩子。）</p></li><li><p>有益的称赞：你的作文有几个新的想法。<br>可能的推论：我也可以有创造性的。<br>（无益的称赞：就你的年级来说，你写得不错，当然了，你还有很多需要学习。）</p></li></ul><p>给孩子指导而不是批评。</p><p>为了避免下判断，心理学家不会发表批评意见影响孩子，而是指导孩子。</p><p>在批评孩子时，父母会攻击孩子的人品和性格。</p><p>而指导孩子时，我们陈述问题以及可能解决问题的方法。我们不会针对孩子本人发表任何观点。</p><p>当不好的事情发生时，当时并不是教训肇事者人品的合适时机，应该先处理事情，而不是人。</p><p>看到儿子玩杯子，父亲可以拿走杯子，然后给他一个更适合玩的东西，例如一个球。</p><p>或者当杯子打碎时，他可以帮助儿子处理玻璃碎片，顺带说一些像“杯子很容易打碎，有没有想过这么小一个杯子居然能弄得这么乱？”之类的话。</p><p>从一些小意外里，孩子可以学到很宝贵的教训。孩子需要从父母那里学会分辨什么是仅仅让人不愉快、让人讨厌的事情，什么是悲剧和灾难。</p><p>丢失了一只手套不需要发脾气，一件衬衫扯破了，也无需像希腊悲剧里那样让孩子自己动手解决。</p><p>如果老师或父母不断重复说一个孩子愚蠢，渐渐地，孩子就会相信，他会认为自己的确是愚蠢的，然后就会放弃智力上的努力，认为避免愚蠢的方法就在于避开比赛和竞争。</p><p>他的安全感依赖于不去努力，他生活的座右铭变成：“如果我不去试，我就不会失败。”</p><p>对孩子来说，培养对自己的信心需要听到或者无意中听到对他们的积极评价。</p><p>对于许多父母来说，指出孩子的错误比指出他们的正确要容易得多，这很具有讽刺性。但是，如果我们希望孩子在成长的过程中对自己有信心，我们就需要利用每个机会强调他们积极的一面，避免使用贬低性的言辞。</p><p>对孩子来说更有用的是，要让他知道，父母的愤怒不会带来自己被抛弃的后果。失去爱的感觉只是暂时的，一旦怒气平息了，爱自然会回来。</p><p>在我们自己的童年时代，没有人告诉我们如何处理生活中不可避免的愤怒情绪。</p><p>愤怒，就像普通的感冒一样，是种周期性复发的麻烦。我们可能不喜欢它，但是我们无法忽略它。我们可能很了解它，但是无法阻止它的发生。</p><p>精神上健康的父母并不是圣人，他们能意识到自己的愤怒，并且重视它，他们把愤怒当成一种信息资源，是他们关心孩子的表示。他们的言语和他们的心情一致，他们不会隐藏自己的情绪。</p><p>简十一岁，一回到家都大叫：“我无法打棒球，我没有衬衣！”<br>她的妈妈可以给女儿一个可行的建议：“穿那件宽松的上衣。”或者，如果希望提供帮助，她可以帮助简找一件衬衣，但是简的妈妈没有这样做，而是决定说出自己真实的想法：“我很生气，我真的很生气。我给你买了六件棒球衬衣，你不是放错了地方，就是丢了。你的衬衣应该放在你的抽屉里，这样，当你需要的时候，你就知道该到哪儿找到它们了。”</p><p>简的妈妈表达了她的愤怒，但是没有辱骂女儿。</p><p>没有翻旧帐，我也没有提到我女儿的名字，我没有说她是没有条理的人，也没有说她不负责任。</p><p>发怒的三个步骤在平静时期，让自己做好应付紧张时刻的准备，应该承认下面的事实：<br>1、我们接受这个事实：在跟孩子打交道的时候，我们有时会发脾气。</p><p>2、我们有权生气，而不必感到内疚或者羞愧。</p><p>3、除了安全考虑，我们有权利表达自己的感觉。只要我们不攻击孩子的人品或者性格，我们可以表达我们的愤怒。</p><p>“我叫你吃晚饭，而你却不来，我很生气，非常生气，我对自己说：‘我煮了一餐好吃的，希望获得赞赏和感激，而不是失望！’”这个方法可以帮助父母释放怒气，而不致引起伤害，而且，它甚至可以是一堂重要的课，教会孩子如何安全地表达愤怒。</p><p>语言具有培养、激发，或者威胁、毁坏的力量。</p><p>当我们注意到孩子的努力，并且表示感激时，我们就帮助了他们培养希望和信心。与此相反，当我们评定孩子时，会造成孩子的焦虑和反抗。</p><p>否定性的定性词语（”懒惰”、”愚蠢”、”卑鄙”）可能会对孩子造成伤害，这个是很显然的；奇怪的是，一些肯定的词语（”好”、”完美”、”最好”）也可能毫无价值。</p><p>我们对待孩子的态度应该是正面的、鼓励的。我们承认努力，表达感激（”你做那件事做得很努力。””谢谢你的帮忙。”），但是我们不能评价孩子，不能给他们定性。</p><p>当麻烦发生时，我们要寻求解决的方法，而不是责备和批评。即使无法避免的怒火，也可以不带指责、不带定性评价地表达出来。所有这些人道的交流方式技巧的背后，是对孩子深深的理解和尊重。</p><h1 id="第三章-自取其害：应该避免的作法"><a href="#第三章-自取其害：应该避免的作法" class="headerlink" title="第三章 自取其害：应该避免的作法"></a>第三章 自取其害：应该避免的作法</h1><p>对于孩子来说，恐吓会刺激他们重复做一件不被允许的事情。</p><p>当孩子被告知：“如果你再做这件事……”时，他听不到“如果你”这三个字，他听到的只是“再做这件事”。有时他会把这句话理解为：妈妈希望我再做一次，要不她会失望的。</p><p>这种“如果……那么”的方法可能偶尔会激励孩子为了眼前的目标努力，但是很少会鼓励孩子一直努力下去，甚至从来不会。我们的每一句话传达给孩子的信息都是对他们能不能变好的能力的怀疑。</p><p>既不能给孩子许诺，也不能要求孩子做出许诺。为什么要禁止许诺呢？我们跟孩子的关系应该建立在互相信任的基础上。</p><p>具有挖苦天赋的父母对孩子的精神健康有着极大的危害。有如此语言天才的父母是有效沟通的严重障碍。</p><p>在对孩子的教育中，不能有难堪的挖苦和严厉的陈词滥调。</p><p>如果我们希望教育孩子诚实的品德，那么我们必须作好心理准备，既要听让人愉快的真话，也要听让人不高兴的真话。</p><p>如果要想孩子在成长过程中保持诚实的品质，就一定不能鼓励他们隐瞒自己的想法，不管这些想法是积极的、消极的、还是矛盾的。</p><p>我们处理谎言的政策很清楚：</p><ul><li>一方面，我们不应该扮演检察官的角色，不应该要求孩子坦白，不应该夸大事实把事态弄大。</li><li>另一方面，说话不要拐弯，要说真话。</li></ul><p>简而言之，我们不能激发孩子防御性的撒谎，我们不能有意制造让孩子撒谎的机会。</p><p>父母防止孩子撒谎的另一个方法是避免问“为什么”。</p><p>过去，“为什么”是审讯术语，这个意义已经很久不用了，但是被讹用作为批评的用语。</p><p>对孩子来说，“为什么”就意味着父母不赞成、失望、不高兴，从而引出过去受责备的回忆。</p><p>即使一句简简单单的“你为什么这么做？”都可能让孩子想成“为什么你会做那么愚蠢的事呢？”</p><p>不要问这些没有答案的反问句，我们应该作出带有同情的陈述：</p><ul><li>“如果你能和约翰分享，他一定会很高兴的。”</li><li>“有些事情很难记得。”</li><li>“你迟到时我很担心。”</li><li>“你能采取一些什么措施来让你的工作有条理一些呢？”</li><li>“你有很多想法。”</li></ul><p>当“窃行”被发现时，避免说教和装腔作势是很重要的，可以引导孩子有尊严地走上正直的道路，要平静而威严地告诉他或她：<br>“玩具不是你的，应该还回去。”<br>或者说：“我知道你希望留下这支枪，但是吉米希望拿回去。”</p><p>如果你确定孩子从你的皮夹里偷了钱，最好不要用提问的方式问这件事，而是告诉他：<br>“你从我的皮夹里拿了一块钱，我希望你还给我。”<br>当钱被还回来时，我们应该跟孩子说：“如果你需要钱，可以问我要，我们可以商量的。”</p><p>如果孩子否认拿了钱，我们不要和孩子争论，也不要恳求他坦白，我们应该说：<br>“你知道我已经知道了，你必须把钱还回来。”<br>如果钱已经花了，那么谈话的内容应该集中在赔偿的方式上，比如做家务，或者在零花钱当中扣。<br>不要把孩子叫做小偷或说谎的孩子，或者预言一个不好的结局，这非常重要。</p><p>如果你的孩子偷吃了罐子里的饼干，而他的或她的脸上还沾着糖粒，这时，不要问这样的问题：<br>“谁拿了罐子里的饼干？”<br>“你有没有碰巧看到有谁拿了？你吃了吗？真的吗？”<br>这样的问话通常会逼得孩子随口编瞎话，而这只能让我们更加受到伤害。</p><p>规则是：当我们知道答案时，不要提问题。开诚布公地说出来会更好，例如可以这么说：<br>“你吃了饼干，我已经告诉过你不要吃。”<br>最后的那句话里包含着适当的、合理的训诫，它会让孩子感到不安，并且唤起他想弥补过错的责任感。</p><p>不管在什么情况下，在教育孩子要有礼貌时，父母必须要有礼貌。但是，父母经常很粗鲁地教育孩子要懂礼貌。</p><p>生活中美好的细节不可能靠大锤来灌输。</p><p>尖刻的指责和悲观的预言对孩子也没有任何帮助。要想有更好一点的效果，大人必须使用简单的、有礼貌的语句。</p><p>在孩子成长的岁月中，如何处理他们的谎言、偷窃，以及其他一系列错误行为，每一个父母都曾感到为难、困惑过。威胁、贿赂、许诺、挖苦、粗鲁都不是答案。</p><p>最有效的解决方法是清楚地表达出我们的价值观。</p><p>我们不要问那些已经知道答案的问题，最重要的是，我们对待孩子时，要尊重他们，就像我们希望他们尊重我们那样。</p><p>这种处理孩子不良行为的方法既充满关爱，又不失权威，并且能够加深父母和孩子之间的感情。</p><h1 id="第四章-要求服从，不如传输价值观"><a href="#第四章-要求服从，不如传输价值观" class="headerlink" title="第四章　要求服从，不如传输价值观"></a>第四章　要求服从，不如传输价值观</h1><p>在许多家庭里，父母希望通过日常琐事来找到这个问题的解决方法。倒垃圾，做饭，给草坪割草，洗盘子等等，父母相信这些行为对培养孩子的责任感是有效的。</p><p>而事实上，这些日常琐事尽管对持家很重要，但是可能对培养责任感并没有积极的影响。</p><p>很明显的事实是责任不可以强加。责任感只能从内心产生，由从家庭中和社区中吸取的价值观中慢慢培养和指导。</p><p>我们希望我们的孩子能成为有责任感的人，同时希望他们的责任感来源于最高的价值观，包括尊重生命，关注人类的幸福，用常见的词汇来说就是：同情、责任和人道。</p><p>尽管孩子可能很礼貌，把自己和房间都收拾得很整洁，家庭作业也做对了，但是他们还是会作出不负责任的决定，特别是那些整天被告诉该干什么、干什么的孩子，他们很少有机会去实践自己的判断能力，很少有机会自己作出选择、培养自己内心的标准，因此更容易作出不负责任的决定。</p><p>那些有机会自己作决定的孩子，在成长中，精神上会变得自立，他们能够像成年人一样选择适合自己的伴侣和工作。</p><p>价值观不可以直接传授。孩子只会被那些他们爱戴、尊敬的人同化，通过模仿他们，孩子们吸收了他们的价值观，并且成为孩子自己价值观的一部分。</p><p>孩子的责任感开始于父母的态度和技巧。态度包括允许孩子有自己的情绪；技巧包括向孩子示范处理情绪的可接受的方法的能力。</p><p>该采取什么样的措施才能在理想的目标和日常的实践中间搭起一座桥梁呢？我们该从何处着手呢？<br>“看起来你今天过得很不愉快。”“有人让你不高兴了。”比起那些“出什么事了”、“你怎么啦”、“发生了什么事”的问句，以上的陈述句要更可取。</p><p>问句表达的是好奇，陈述句则传达同情。</p><p>不过即使是父母充满同情的话语也不能马上改变孩子的坏情绪，孩子需要时间来吸收父母理解的话语中所表达的爱意。</p><p>让孩子感觉自己出了问题的最简单的方法就是批评。</p><p>批评使他们在自己心目中的形象越来越渺小。</p><p>孩子需要的是没有贬低的信息，而不是批评。</p><p>一位妈妈看到她七岁的儿子史蒂文用勺子几乎把整罐巧克力布丁舀到一个特大号的碗里，她正要指责他：“你太自私了！你只想到你自己！家里不是就你一个人！”</p><p>但是她已经知道这种定性评价的话是没有用的，向孩子指出他不好的人格品质并不能使他变成一个更有爱心的人。</p><p>她没有说这些定性的话，而是说了一些没有贬低意思的话：“儿子，布丁要分给四个人。”“哦，对不起。”史蒂文回答说，“我不知道，我放回去一些。”</p><p>只要我们开始理解孩子的观点，倾听那些引发他们不端行为的情绪。通过敏感的聆听，父母可以造成孩子令人欣喜的改变。</p><p>当父母看上去对孩子的情绪和观点漠不关心时，孩子会感到失望和不满。</p><p>而那些留神倾听孩子说话的父母，不仅听，并且体谅孩子强烈情感的父母，传达给孩子的信息是：他们的观点和想法是有价值的，是受到重视的。这样的重视会带给孩子自尊。个人价值得到承认的感觉会让孩子更有效地处理身边的人和事。</p><p>孩子也没有理由怀疑从父母那里反射回来的自己的样子，他们接受父母的评价，哪怕是否定的，这些否定的评价通常是说他们愚蠢、懒惰、迟钝、不体谅他人、自私、麻木、不负责任，以及令人讨厌等等。</p><p>下面这样的话：“你的样子糟透了”，或者“你从来做不对任何事”，或者“你太笨拙了”等等，绝不会帮助孩子觉得自己漂亮、能干或者优雅。</p><p>很多父母说自己的孩子笨、懒、欺骗，却又希望这样的评价能够激发孩子变成一个聪明、勤劳、诚实的人。</p><p>父母应该自觉避免使用那些能够导致怨恨和厌恶的言辞及评论：</p><ul><li>辱骂：你是学校的耻辱，也给家里丢脸。</li><li>预言：像你这样子，迟早要进监狱！</li><li>威胁：如果你不安静下来，就再也没有零花钱用，也不许再看电视。</li><li>谴责：你总是第一个惹麻烦的人。</li><li>专横：坐下，闭嘴，吃你的晚饭。</li></ul><p>不带抨击地陈述感受和想法。</p><p>在遇到麻烦时，父母表达出自己的感受和想法，而不攻击孩子的人品和尊严，这样会有效得多。</p><p>用人称代词“我”开头，父母既可以表达出他们愤怒的情绪，描述孩子不被许可的行为，又不会辱骂或者贬低孩子。</p><p>父母带着敏感的心倾听孩子的话，努力理解孩子的观点，不再说一些尖刻的话语，能够不带辱骂地反映孩子的感受和需要，当父母这样做时，孩子的内心就会开始发生变化。</p><p>同情的氛围让孩子向父母靠得更近：他们会注意到父母公平、体谅、礼貌的态度，并且模仿。这些变化不是一夜之间就会发生的，但是努力最终会获得回报。</p><p>孩子不是一生下来就天生富有责任感的，也不是到了一定年龄就会自动获得责任感，责任感就像钢琴演奏一样，是慢慢获得的，要通过多年的努力，要在日常实践中找一些适合孩子年龄和理解力的事情，来锻炼孩子的判断能力和作选择的能力。</p><p>培养孩子的责任感，就是要在跟他们有关系的事情上让他们有发言的机会，如果必要，让他们自己作出选择。</p><p>有些事情完全在孩子自己的责任范围之内，在这些事情上，孩子应该有选择的权利。而有些事情只在我们的责任范围之内，但是对孩子的利益会有影响，在这些事情上，孩子应该有发言权，不过没有选择权，决定要由我们来作，同时要帮助孩子接受必然会发生的事实。</p><p>我们应该故意制造一些场景，让孩子自己作决定。</p><p>父母选择场景，孩子作出选择。</p><p>不要问小孩子这样的问题：“你早餐想吃什么？”应该这样问小孩子：“你想吃炒鸡蛋还是煎鸡蛋？”“你想吃烤面包，还是不烤的面包？”“你的麦片粥是要热的还是凉的？”</p><p>这样的问题传达给孩子一个信息：她需要对自己的事务负一定的责任。</p><p>父母提供有营养的、美味的食物，如果跟医学上的建议不相违背，那就由着孩子根据自己的胃口需要吃多吃少。很显然，吃饭是在孩子自己的责任范围之内的。</p><p>父母就应该表现出这样的态度：家庭作业完全是孩子和老师的事。父母不应该就家庭作业的事跟孩子唠叨不休，他们不应该监督或者检查孩子的家庭作业，家庭作业是你自己的事，你做家庭作业就像我们工作一样。这样的态度会给家庭生活带来很多乐趣，而避免了很多苦恼。</p><p>不要评论孩子的坐姿，不要数落他们的外表是不是整洁，不要叮嘱他们要小心家具。</p><p>孩子在做作业的时候，我们不应该提问题或者吩咐什么小差事去打断他们，这些问题和差事可以等他们做完作业之后再提出来。</p><p>我们应该站在幕后，给孩子提供安慰和支持，而不是指导和援助。</p><p>在对待家庭作业的问题上，威胁和唠叨是父母常见的方式，因为这让父母相信他们已经采取了一些措施。</p><p>而事实上，这样的警告不仅无用，而且危害更大。而紧张气氛带来的唯一后果就是被激怒的父母和生气的孩子。</p><p>许多有能力的孩子迟交家庭作业，在学校成绩落后，这是他们对父母期望的无意识的反抗。</p><p>要想长大，变得成熟，他们需要独立存在的感觉，需要摆脱爸爸妈妈的束缚。</p><p>当父母过分关注孩子在学校的成绩单时，孩子的自主性就会受到威胁。</p><p>零用钱不应该是作为对好的行为的奖赏或者做家务的报酬来付给孩子。</p><p>它是一种教育手段，有明确的目的：给孩子提供使用金钱的经历，从中锻炼孩子选择和承担责任的能力。</p><p>零用钱有一个基本的条件：在固定的支出之后，余留下来的零钱应该归孩子自己保存或花费。</p><p>一位妈妈要求她的孩子收拾桌子，但是他们拖着没做，妈妈很生气，要是在过去，她会冲他们嚷，并且威胁他们。但是这一次，她陈述了事实，而不是威胁：“桌子收拾好了，我就会上甜点。”孩子们立刻忙起来，这让她明白她说到了重点。</p><p>当父母尊重孩子的感受和想法时，孩子就会考虑到父母的愿望。</p><p>老师最关键的任务是要获得孩子的尊重和信心。</p><p>当孩子面临困难时，同情的理解比起意见、赞扬，或者现成的、即时的解决办法更容易鼓励孩子。</p><p>把问题集中在如何帮助孩子上。</p><p>父母如何把家长会变成有建设性的经历呢？<br>唐的父亲来参加家长会，准备好了（本子和笔）作记录，并且把任何对他儿子否定性的评价都转化成了肯定的行为。<br>父亲：唐今年表现如何？老师：唔，让我告诉你，你的儿子不能按时到校，他不做家庭作业，他的笔记本一塌糊涂。<br>父亲（记录）：哦，你的意思是说唐需要改进，要准时到校、做家庭作业、保持笔记本整洁。</p><p>唐和他的父亲从这个笔记中都得到了益处，它帮助他们把精神集中在如何改进上，而不是过去的缺点上。这样做避免了责备，提供了指导和希望。</p><p>允许孩子为选择自己的朋友负责，同时我们也要承担责任，确保他们的选择有益，这需要一个精密的体系来监督和平衡。</p><p>好的父母，就像好的老师，要让自己渐渐成为孩子可有可无的人物。</p><p>父母应该让孩子自己作决定，运用自己的力量，对于这样的关系，父母会很满意。</p><p>在和孩子的谈话中，我们可以有意识地使用一些句子，暗示我们相信他们有能力为自己作出明智的决定。</p><p>因此，当我们内心对孩子的要求的回应是“好的”时，我们可以构思一些陈述句来表达我们的观点，培养孩子的独立意识。</p><ul><li>“如果你想的话。”“如果你真的希望。”</li><li>“你来决定这件事。”</li><li>“这真的取决于你自己。”</li><li>“这完全是你的选择。”</li><li>“不管你作出什么决定，我都没问题。”</li></ul><h1 id="第五章-纪律：替代惩罚的有效手段"><a href="#第五章-纪律：替代惩罚的有效手段" class="headerlink" title="第五章　纪律：替代惩罚的有效手段"></a>第五章　纪律：替代惩罚的有效手段</h1><p>在约束孩子守纪律的过程中，不要对孩子情感上的快乐造成伤害。</p><p>纪律的关键在于寻找惩罚的有效替代手段。<br>为什么父母会激怒孩子？不是因为他们不和蔼，而是因为他们不懂得方法。</p><p>他们没有意识到他们的那句话是有破坏性的。他们很严厉，是因为没有人告诉他们如何在不骂孩子的前提下处理棘手的问题。</p><p>如果佛瑞德的妈妈没有说上面那些话，而是说：<br>“站在大厅里多尴尬啊！当着朋友的面冲你嚷嚷也很让人丢脸！怪不得你要生气。没有人喜欢遭到那样的对待。”<br>这样同情的回应说出了佛瑞德烦躁的情绪，会消除他的怒气，让他感到妈妈对他的理解和爱。</p><p>有些父母会担心，如果他们承认孩子的烦躁，提供情感上的急救，会给孩子传达出这样一个信息：他们不担心孩子的不良行为。</p><p>但是，就像上面提到的佛瑞德妈妈一样，她儿子的捣乱行为是发生在学校里，而老师已经处理过了。她苦恼的儿子从她那儿需要的不是额外的训斥，而是同情的话语和理解的心情，他希望妈妈能帮助他消除心烦。移情作用——父母理解孩子情绪的能力——是培养孩子的重要的、有价值的因素。</p><p>孩子也需要有技巧、有知识的父母，需要父母理解“巴掌方法”对他们是没有用的，就像对电视机没有用一样，它不可能达到目的。</p><p>没有孩子在受到惩罚后会对自己说：“我要改，我要更有责任，更合作，因为我希望让惩罚我的大人高兴。”</p><p>纪律就像外科手术，需要精确，不能随意下刀，不能草率地抨击孩子。</p><p>我经常使用的手段与我努力想从我孩子身上根除的毛病很相像。我提高声音让他们不要吵，我使用暴力阻止他们打架，我对不懂礼貌的孩子很粗鲁，我会责骂说话不文明的孩子。</p><p>不端行为和惩罚不是对立的两个方面，不能互相抵消，相反，它们会互相滋养、互相增强。</p><p>惩罚无法制止不当行为，只会让肇事者在躲避侦查上更有技巧。</p><p>当孩子受到惩罚后，他们会想办法更加小心，而不是更顺从，或更有责任心。</p><p>简而言之，宽容就是接受想像的和象征性的行为。<br>过分纵容是允许不良行为。对孩子宽容，接受他们所有的感觉能够带来信心，增强孩子表达情绪和想法的能力。<br>过分纵容带来焦虑，增加孩子对特权的要求，这些特权是不能同意的。<br>允许情绪，但要限制行为这种纪律的基础在于愿望、情绪和行为之间的差别。我们限制行为，但是不限制愿望或者情绪。</p><p>大多数的纪律问题包括两个部分：愤怒的情绪和愤怒的行为。<br>不同的部分应该不同地处理。情绪应该得到理解地处理，行为可能需要限制和纠正。</p><p>当我们用有用的方法训诫孩子时，我们帮助他们，不仅关注他们的行为，也关注他们的情绪。</p><p>父母应该允许孩子说出他们的想法，但是要限制、指导他们的不良行为。在作出限制时，态度既要保持父母的自尊，也要保持孩子的自尊。</p><p>在制定限制时——就像其他所有教育手段一样——成果取决于方法。限制必须清楚地告诉孩子<br>（a）什么是不可接受的行为；<br>（b）什么替代行为是可以接受的。你不可以扔盘子，你可以扔枕头。</p><p>当女儿说她不想去学校时，不要坚持说：“你必须去上学，每个孩子都要上学，这是规定，我不希望有任何训导员来我们的家里。”</p><p>至少要承认她的愿望，这样的回答更加富有人情味：“你多么希望今天不用去上学，你希望今天是星期六而不是星期一，这样你就能出去和朋友玩了，我明白的。你早餐想吃什么？”</p><p>为什么承认幻想要比干脆的拒绝伤害小呢？因为这位妈妈详细的回应告诉女儿妈妈能理解她的感受。当我们感到被理解的时候，我们也会感到被爱。</p><p>作出限制时，有些表达方法会引起反抗，而另一些方法则会得到孩子的合作，比如： </p><ul><li><p>1，父母承认孩子的愿望，并用简单的话说出来：“你希望今晚能去看电影。” </p></li><li><p>2，父母明确指出对某个具体的行为的限制：“但是我们家的规矩是‘不是周末的晚上不能看电影。’”</p></li><li><p>3，父母指出愿望至少能部分实现的途径：“你可以星期五晚上或者星期六晚上去看电影。” </p></li><li><p>4，父母帮助孩子说出一些作出限制时可能导致的不满，然后表示同情：“很显然你不喜欢这个规矩。”</p></li><li><p>“你希望没有这样的规矩。”“你希望规矩是这样的：‘每天晚上都能看电影。’”</p></li><li><p>表达限制时，语言不要刺激孩子的自尊。限制的语言越简洁、越客观，孩子越容易接受。<br>“不是周末的晚上不能看电影”比“你知道不是周末的晚上，你不能去看电影”引起的不满要少。<br>“该睡觉了”比“你还小，不该熬夜熬这么晚，上床去”要更容易接受些。</p></li></ul><p>当限制指出某个物体的功能时，孩子更愿意接受。<br>“椅子是用来坐的，不是用来站的”比“不要站在椅子上”效果好。<br>“积木是用来玩的，不是用来扔的”比“不要扔积木”好，也比“对不起，我不能让你扔积木，太危险了”效果好。</p><p>孩子需要健康的方法释放他们的能量。<br>例如：“不要跑，你就不能像个正常孩子那样走路吗？”“不要一直跳。”“坐直了。”“你明明知道你有两只脚，为什么一定要用一只脚站着呢？”“你会摔断腿的。”孩子的运动行为不应该受到过分限制。为了精神上和身体上的健康着想，孩子需要跑、跳、爬、蹦等等运动。</p><p>玛格丽特（在操场上）：我喜欢这里，我现在不要回家，我要再待一个小时。<br>父亲：你说你要再待一个小时，我说不能。这样的陈述可能会导致两种可能的结果，每一种都是让人不愉快的：孩子失败了，或者父亲失败了。</p><p>更好的办法是关注孩子想继续待在操场的愿望，而不是关注她对父亲权威。<br>例如，父亲可以说：“我看得出来你喜欢这里，我想你希望能多留一会儿，甚至多待十个小时，但是到回家的时间了。”</p><p>不允许孩子打父母的限制在任何情况下都不能更改。</p><p>有效的教养建立在父母和孩子之间相互尊重的基础上，父母不能放弃自己成人年的角色。</p><p>体罚的最大副作用就是它可能会阻碍孩子道德良心的发展。</p><p>打孩子可以非常轻易地消除孩子的内疚：孩子已经为不端行为付出了代价，于是他会很随意地再犯。</p><h1 id="第六章-积极的养育：孩子的一天"><a href="#第六章-积极的养育：孩子的一天" class="headerlink" title="第六章　积极的养育：孩子的一天"></a>第六章　积极的养育：孩子的一天</h1><p>父母不要每天早上去叫醒上学的孩子，孩子讨厌打扰他们的睡眠、破坏他们的美梦的父母，他们害怕父母来到他们的房间，掀开他们的被子，欢快地说：“起床刷牙去。”</p><p>让闹钟叫醒孩子是比较好的方法，对孩子来说，闹钟比盯着他们看的“闹钟妈妈”或“闹钟爸爸”要好多了。</p><p>孩子不容易醒，不能说他懒；孩子没有马上起床刷牙，不能说他脾气坏。不要奚落早上很难活跃、很难有热情的孩子。</p><p>当孩子觉得仓促时，他们会自己抓紧时间。大多数情况下，当父母说“赶快！”时，他们反而故意拖拉，以此来反抗大人。</p><p>表现出无效率是孩子在现实中反抗不属于他们自己的时间表专制的非常有效的武器。</p><p>孩子基本上不需要催促，而是要给他们一个现实的时间限制，把守时的任务留给他们自己：</p><ul><li>“校车还有十分钟就到了。”</li><li>“电影一点钟开始，现在十二点半了。”</li><li>“晚餐七点钟开始，现在六点三十分了。”</li><li>“你朋友十五分钟后就到了。”</li></ul><p>吃早饭的时候，不是教育孩子普遍哲学、道德原则，或者礼貌举止的好时机。</p><p>对父母来说，这时只适宜给孩子准备有营养的食物，帮助他们准时出发去上学。</p><p>不要让孩子决定父母的回答或者情绪，这一点很重要。</p><p>黛比的妈妈可以不反击，她可以承认女儿的抱怨，维持一个愉快的早晨。<br>妈妈：今天早上，你好像找不到你喜欢吃的东西。黛比：没有，没有我喜欢吃的东西，我也不是很饿，就吃一根香蕉好了。</p><p>就像一个聪明的人知道如何从一个洞里面出来，而一个明智的人一开始就不会掉进洞里去。</p><p>最近，我决定要做一个明智的人，而不是一个聪明的人。当孩子惹了麻烦时，我不再责备他们，而是提供帮助，</p><p>塞尔玛：你从不给我买东西。<br>妈妈：你有什么东西想让我给你买吧。<br>不要说：你怎么能这么说？上个星期我还给你买了那么多漂亮的衣服呢！</p><p>朱立安：你从不带我出去玩。<br>父亲：你想去哪儿？<br>不要说：你在最后总是跟我吵架，我怎么还能带你去？</p><p>“决不”和“总是”是孩子最喜欢用的词语，他们生活在极端的世界中。</p><p>但是父母已经知道，灰色比黑色和白色要普遍得多，父母应该能够用上面的表达限制孩子，来教育孩子。</p><p>最好不要把系鞋带和教育孩子负责任联系在一起，要想避免争论，可以给孩子买一双易穿易脱的懒汉球鞋，或者对于小孩子，只需给他系上，不要做任何评论。</p><p>孩子不应该穿他们最贵的衣服去上学，也不应该为了保持衣服整洁而担忧。孩子跑、跳或者打球的自由应该要比外表的整洁受到优先考虑。</p><p>在早上的匆忙中，孩子可能会忘了拿书本、眼镜、午餐盒，或者午餐的钱。</p><p>最好的处理办法是把孩子忘了的东西递给孩子，不要增加任何有关健忘啊、不负责任啊等等之类的说教。</p><p>在孩子上学之前，不应该给他一长串的忠告和警告。<br>分别时说一句“祝你今天愉快”，比一般的警告“不要惹麻烦”要好。<br>对孩子来说，“两点钟我去接你”比“放学后，不要在街上闲逛”更有指导性。</p><p>孩子们希望放学回家后，父母或者其他关心他们的大人能在家欢迎他们。</p><p>不要问孩子那些只会引起无精打采的回答的问题。</p><p>有一些大一点的孩子也喜欢爸爸妈妈给他们掖被子，他们的心愿应该得到尊重，应该满足他们，父母不应该因为这些看上去“孩子气”的希望嘲笑或者批评他们。</p><p>时间的范围由父母来决定，在这个范围内，具体的时间由孩子决定。</p><p>父母如何过自己的生活，不需要得到孩子的批准或同意。</p><p>如果孩子因为父母晚上要出去而哭起来的话，不要去谴责孩子的恐惧，但是也不要服从孩子的愿望。</p><p>孩子反对、请求，或者威胁的内容可以不去考虑。我们的回答应该坚决而亲切：“你希望我能陪你，但是这次我该出去了。”</p><p>一位著名的心理学家注意到，人们在观看电视的时候完全没有称之为“心流”的最佳体验。</p><p>成长的最好环境是当“一个人的技能完全用于战胜一个刚好能够掌控的挑战时”。</p><p>对孩子来说，可能意味着写诗，或者写小故事；用黏土雕塑，或者用砖头砌城堡；可能需要和兄弟姐妹演戏，或者和朋友去冒险。</p><p>成长和满足更容易从专注的努力中获得，而不是不动脑筋地看电视。</p><p>两位著名的儿科医生给出了具体的建议：“在孩子三岁之前，看电视一天不能超过半个小时。三岁之后，在父母的陪同下，可以再增加半个小时看电视。”</p><p>对父母来说，只是监督儿童媒体节目的质量和性质是不够的，父母可以通过健康的感情关系、快乐的嬉戏和令人满意的业余爱好，为打开孩子学习、交流和贡献之门。</p><h1 id="第七章-妒忌：不幸的传统"><a href="#第七章-妒忌：不幸的传统" class="headerlink" title="第七章　妒忌：不幸的传统"></a>第七章　妒忌：不幸的传统</h1><p>和父母相比，孩子不会怀疑家庭里妒忌的存在，他们早就知道妒忌的含义和影响。</p><p>不管他们作好了多么充分的心理准备，新生儿的诞生还是会让他们感到妒忌和受伤。</p><p>当宣布新生儿诞生时，最好避免冗长的解释和虚伪的期待，例如：<br>“我们非常爱你，你是这么棒，因此爸爸和妈妈决定再要一个跟你一样的孩子，你会爱上新宝宝的，它也是你的宝宝，你会为它感到骄傲，你会一直有人玩了。”</p><p>分享父母或者分享爱人会让人非常痛苦。在孩子的经验中，分享意味着自己所得的减少，就像分享一个苹果或者口香糖。</p><p>分享父母的前景已经足够让人不安，但是我们对孩子会为新生儿感到高兴的期待则是不符合逻辑的。</p><p>宣布新生儿的降临时，对原来的孩子来说，不能太盛大、太夸张。这样说就足够了：“我们家又多了一个新生宝宝。”</p><p>通过这次危机的压力和紧张，孩子的品格是因此得到提高，还是因此扭曲，取决于我们的智慧和技巧。</p><p>她的妈妈并没有鼓励这种对生活的单方面的看法，而是对女儿说：“有时候他会很好玩，不过有时候他会很麻烦，有时他会哭，让我们所有的人都很讨厌；有时候他会尿床，或者把尿布弄得肮脏不堪。我必须给他洗，喂他吃奶，照顾他。你可能会觉得被遗忘了，你可能会感到妒忌，你甚至可能会对自己说：‘她不再爱我了，她爱宝宝。’当你那样想时，一定要过来告诉我，我会给你特别的爱，所以你就不会太担心，你会知道我爱你。”</p><p>对于新生儿，孩子一定会感到愤怒和厌恶，最好的方法是要让孩子能够不受拘束地、公开地表达出苦恼，而不要让他们暗地里郁郁不乐。</p><p>对待不同年龄的孩子一视同仁，这种做法并不应提倡。相反，随着年龄的增长，应该带来新的权利和新的责任。年纪大一点的孩子比起年纪小一点的孩子，自然应该有多一点的零花钱，晚一点的就寝时间，以及有更多的自由，可以出去和朋友一起玩。</p><p>这些权利要公开地、得体地给予，这样，所有的孩子都会渴望长大。小一点的孩子可能会嫉妒年长孩子的权利，我们可以帮助他们处理这种情绪，不要解释事实，而是要理解他们的情绪：“你希望你也能晚一点睡。”“你希望你能大一点。”“你希望你不是六岁，而是九岁。”“我知道，但是现在该睡觉了。”父母可能在要求一个孩子要为另一个孩子作出牺牲时，无意识地助长了妒忌心理的产生：“宝宝需要你的婴儿床。”“对不起，今年我们不能给你买新的冰鞋，有了宝宝，我们需要额外的钱。”这样做的危险是，孩子可<br>能会感觉不仅被剥夺了财产，还剥夺了父母的慈爱。所以这样的要求应该用关爱和感激来缓冲一下。</p><p>当一个三岁的孩子折磨宝宝被发现时，应该立即制止它，并且直接指出他的动机：“你不喜欢宝宝。”“你生宝宝的气。”“告诉我你多么生气，我会注意到的。”</p><p>我们不要建议孩子该怎么做，我们所要做的是保持中立的态度进行观察，并且用同情的语调对孩子作出回应：我们不会为野蛮的情绪感到震惊。</p><p>情绪是坦率的，攻击是有害的。最好把怒气象征性地发泄到一个无生命的物体上，而不是直接发泄到宝宝身上，也不是以某种症状的形式发泄到他或她自己身上。我们的话要简短：“你向我显示了你是多么生气！”</p><p>爱要唯一，而不要均一。</p><p>精心计算精神或者物质上的给予，这种费神的事情会让每一个人疲惫而恼怒。</p><p>孩子并不渴望平等地分享父母的爱：他们需要被爱得唯一，而不是均一。爱的重点是质量，而不是平等。</p><p>对每一个孩子，我们都要传达我们和他们唯一的联系，而不是公平和同等。</p><p>当我们要和一个孩子待一会儿或者待几个小时时，那么就要完完全全地和他在一起。在这个阶段，让男孩子感觉到他是我们唯一的儿子，让女孩子感觉她是我们唯一的女儿。当我们和一个孩子出门时，心里不要再想着其他孩子，不要谈论其他孩子，或者给其他孩子买礼物。</p><p>孩子渴望得到我们完整的爱，当他们的这种欲望被承认时，他们就会感到安心。当那种欲望被理解、被同情地感激时，他们就会感到安慰。当每个孩子被唯一地珍视时，孩子就会变得坚强。</p><p>父母的爱和理解可以减轻孩子的担心，帮助他们调整心态，适应父亲或母亲的新的、成人的爱情。</p><h1 id="第八章-焦虑的来源：情感上的安全感"><a href="#第八章-焦虑的来源：情感上的安全感" class="headerlink" title="第八章　焦虑的来源：情感上的安全感"></a>第八章　焦虑的来源：情感上的安全感</h1><p>父母知道每个孩子都会有担心和焦虑，但是他们不明白这些焦虑的来源。</p><p>孩子最大的担心是父母不再爱他，抛弃他。永远不要威胁说要抛弃孩子。</p><p>当孩子的磨磨蹭蹭超出了你忍受的限度时，比较好的方法是用手拖他走，而不是用话威胁他。</p><p>当生活的情势使得我们不得不离开自己年幼的孩子时，分离之前必须作好充分准备。</p><p>在离开前，妈妈还做了几个其他的安排：她介绍了新的保姆给伊维特认识；她放了很多她的照片和伊维特的照片在化妆台上；她录了一盒磁带，里面是几个伊维特最喜欢听的睡前故事，还有一些充满爱意的话。在无法避免的孤单时刻，妈妈的照片和话语让伊维特安心，感觉到妈妈的爱依然在身边。</p><p>为了防止不必要的自责，父母对待孩子的犯规行为，应该像一个优秀的技工处理损坏的汽车那样。他不会谴责车主，</p><p>而是指出需要修理的地方。他不会谴责汽车的噪音，或者咔哒咔哒声，或者吱吱声，他利用这些声音来进行诊断。他问自己：问题可能出在哪儿？</p><p>当有不同意见时，这样的表达会比较有用：“你这样想，但是我的想法不一样。我们对这件事的想法不同。”“你的看法好像对你而言是正确的，我的看法不一样，我尊重你的看法，但是我有不同的看法。”</p><p>对他们最好的帮助就是耐心的等待，对任务的困难进行一点评价：“穿一件外套不容易。”“瓶盖很难拧开。”</p><p>某件事失败了，不能因此让孩子感到自己能力不够。</p><p>孩子的生活不能被大人对效率的需要所控制，这一点至关重要。</p><p>效率是孩子的敌人。就孩子的情感的经济性而言，效率的代价太高了，它耗尽孩子的才智，阻碍成长，抑制兴趣，可能会造成情感上的彻底崩溃。孩子需要试验、努力的机会，需要在没有催促或者辱骂的情况下学习。</p><p>孩子（以及成年人）不应该被剥夺痛苦和哀伤的权利。</p><p>他们应该能够自由地为失去某个深爱的人而感到痛苦。当孩子能够为了生命和爱的终结而哀悼时，他们的人性得到了深化，人格也更加高贵。</p><p>最基本的前提是，孩子不应该被排除在家庭生活中出现的痛苦之外，就像不能把他们排除在家庭生活的欢乐之外一样。</p><p>回答应该简短而诚实：当一个人死了，他的身体不会感觉到疼痛；死去的人不会再回来；所有的人最终都会死去。跟孩子谈论死亡时，最好避免使用委婉语。</p><h1 id="第九章-性和价值观：需要审慎处理"><a href="#第九章-性和价值观：需要审慎处理" class="headerlink" title="第九章　性和价值观：需要审慎处理"></a>第九章　性和价值观：需要审慎处理</h1><p>萨曼塔的妈妈错过了一个多么好的机会，可以让她的女儿对她懵懵懂懂的性兴趣感到轻松、放心。</p><p>她可以对她好奇的女儿说：“我能看得出你对浪漫的关系很感兴趣，但是我觉得这种事不适合你这种年纪的人，让我们想一想还有什么其他的事情会让你和你朋友感兴趣。”她没有这么说，相反却增加了原本就内疚的女儿的自责。</p><p>当孩子发现嘴巴能够产生特别的愉悦时，他们就把任何可以放入嘴中的东西放入嘴中：拇指、地毯、玩具等等。吮吸、咀嚼、咬等动作带来愉快的感觉，甚至是不能吃的东西也一样。</p><p>这种嘴的愉悦不能被禁止，只能调整：我们务必要保证孩子放入口中的东西要卫生。有些婴儿通过吃就可以获得全部的口头愉悦，而有些孩子需要辅助的吮吸，我们应该不加限制地准许。在孩子一岁左右的时候，嘴巴是孩子认识世界的主要镜子，让它成为一面愉快的镜子吧。</p><p>下流的词语必须要向孩子加以描述和解释。父母应该坦白地告诉孩子他们对这件事的感觉，妈妈可以说：“我一点也不喜欢这些词，但是我知道有些孩子会说，甚至有些大人都说，我不希望听到它们。随你的朋友说去吧。”同样地，我们承认并尊重孩子的愿望和感觉，但是要限制并指导他们的行为。</p><p>“青少年跟父母要避孕药，正是这种要求说明他们还没有准备好进入成年期。”心理学家回答说，“给孩子提供这种药，父母就让孩子失去了一个重要的经历：自己作决定并承受后果。一个成年人不会把责任推到另一个人身上，她要承担自己的责任。”</p><p>萨莉的妈妈回家后，告诉女儿：“亲爱的，如果你觉得你已经准备好可以有性行为了，那么你同样可以去向你的医生咨询避孕药的事情。如果我给你避孕药，那么我就被牵涉进来要为你的行为承担责任，而不是你自己承担责任。”</p><p>爱不仅仅是感情和激情，爱是一个系统，包括态度和一系列的行为，使爱的人和被爱的人的生活得到升华。浪漫的爱经常是盲目的，它只承认所爱的人的优点，却看不到他的缺点。</p><p>相反，理智的爱在接受长处的同时并不拒绝短处。理智的爱，不管是男孩，还是女孩，都不会试图利用或占有对方。</p><p>每个人都只属于他或她自己。这样的爱给每个人自由发展的机会，使每个人都成为最好的自己。</p><p>爱和性不是一回事，但是，幸运的人能够将两者结合起来。</p><h1 id="第十章-总结：如何养育孩子"><a href="#第十章-总结：如何养育孩子" class="headerlink" title="第十章　总结：如何养育孩子"></a>第十章　总结：如何养育孩子</h1><p>养育的目标是什么？是帮助孩子成为一个正派的人，一个受人尊敬的人，一个富有同情心、能承担责任、关心他人的人。</p><p>如何教化孩子？只能用人道的方法，要承认过程就是方法，结局并不能证明手段的有效和正当，在我们努力教育孩子待人接物、为人处事时，要想有效果，就不能伤害他们的感情。</p><p>父母制定家庭的基调，他们对每个问题的回应决定着这个问题是会升级还是降级。</p><p>因此，父母需要抛弃那些拒绝的语言，要学会接受的语言。他们也确实知道这些语言，他们听到自己的父母和客人、陌生人说话时就是使用这种语言。那是一种保护情绪、而不是批评行为的语言。</p><p>语言本身就是一种文明。”但是，言语既可能是文明的，也可能是野蛮的，既可以用来治疗，也可以用来伤害。</p><p>当父母努力带着关心回应孩子时，回报是丰厚的，孩子听到了差别，学会了用同样的方式跟父母说话。</p><p>不过，需要提醒父母的是，不要期望孩子总是会感激这种新的、关心的交流方式。有时，孩子会坚持让父母解决他们的麻烦，而不是承认他们的感受。</p><p>在受到孩子攻击时，不要回到对待孩子的老路上去，这需要技巧。</p><p>上面这位妈妈没有让诺亚牵着她的情绪走，也没有减弱她继续练习所学方法的决心。<br>因为当她承认儿子的困境时，她觉得是关心的和安慰的，因此她没有试着证明自己正确，也没有答应儿子的要求去帮他解决问题，而是帮他建立起对自己解决问题的能力的信心，从而帮助他成长。</p><p>对感受要宽容，对行为要严格。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>只有当培养孩子的方法中浸透着尊重和理解时，孩子才会茁壮成长。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;在沟通中发生这种不幸，常常不是因为缺乏爱心，而是缺乏对孩子的理解；不是因为缺乏智慧，而是缺乏知识。&lt;/p&gt;
&lt;p&gt;我们听到父母在跟客人和陌生人交谈时就是使用那样的语言。那种语言照顾你的感受，而不是对你的行为进行批评。&lt;/p&gt;
&lt;p&gt;父母需要学会把孩子当成客人一样对待。&lt;/p&gt;
&lt;p&gt;为了能达到这些人性的目标，父母需要学习人性的方法。光有爱是不够的，洞察力也不足以胜任，好的父母需要技巧，如何获得并使用这些技巧就是这本书的主要内容，它可以帮助父母把期望的目标转变为每天的实践。&lt;/p&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>Office 常用操作</title>
    <link href="https://octocat9lee.github.io/2020/04/15/Office-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://octocat9lee.github.io/2020/04/15/Office-常用操作/</id>
    <published>2020-04-15T08:01:28.000Z</published>
    <updated>2023-04-04T03:41:50.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本篇文章主要记录工作生活中 Office 三大办公软件的常用操作，根据个人使用记录不断更新完善。</p><span id="more"></span><h1 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h1><h2 id="数据查找"><a href="#数据查找" class="headerlink" title="数据查找"></a>数据查找</h2><p>案例：判断一个表中某列的数据在另一个表数据中是否存在？例如，表 A 的数据如下：</p><table><thead><tr><th align="left">是否存在</th><th>设备编码</th><th>设备名称</th></tr></thead><tbody><tr><td align="left"></td><td>510101</td><td>计算机</td></tr><tr><td align="left"></td><td>510102</td><td>显示器</td></tr><tr><td align="left"></td><td>510103</td><td>打印机</td></tr></tbody></table><p>表 code 数据如下：</p><table><thead><tr><th align="left">设备编码</th></tr></thead><tbody><tr><td align="left">510101</td></tr><tr><td align="left">510102</td></tr></tbody></table><p>目标：判断表 A 中设备编码列中的编码在表 code 中是否存在，若存在，则在表 A 的<code>是否存在</code>列输出<code>YES</code>，否则输出<code>NO</code>。在表 A 的是否存在列键入公式，公式具体内容如下：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>(<span class="built_in">ISERROR</span>(<span class="built_in">VLOOKUP</span>(<span class="symbol">B2</span>,<span class="built_in">code</span>!<span class="symbol">A:A</span>,<span class="number">1</span>,<span class="built_in">FALSE</span>)),<span class="string">&quot;YES&quot;</span>,<span class="string">&quot;NO&quot;</span>)</span><br><span class="line">说明：</span><br><span class="line"><span class="symbol">B2</span> 表示目标单元格</span><br><span class="line"><span class="built_in">code</span>!<span class="symbol">A:A</span> 表示匹配列</span><br><span class="line"><span class="number">1</span> 表示匹配区域的第一列，在上述案例中表示表 <span class="built_in">code</span> 的设备编码列</span><br></pre></td></tr></table></figure><h2 id="连接多列"><a href="#连接多列" class="headerlink" title="连接多列"></a>连接多列</h2><p>使用 Excel 中的两列更新 MySQL 数据库：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="string">&quot;update m_monitor set monitor_name_py = &#x27;&quot;</span>&amp;<span class="symbol">B1</span>&amp;<span class="string">&quot;&#x27; where monitor_name = &#x27;&quot;</span>&amp;<span class="symbol">A1</span>&amp;<span class="string">&quot;&#x27;;&quot;</span></span><br></pre></td></tr></table></figure><p>待拼接字符串全部使用双引号包含，特别注意单元格位置前后的 <code>&amp;</code> 连接符号。</p><h2 id="快速填充"><a href="#快速填充" class="headerlink" title="快速填充"></a>快速填充</h2><p>选中待复制单元格，鼠标悬停在单元格右下角，变成黑色实心，双击即可完成快速填充。</p><h1 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h1><h1 id="Power-Point"><a href="#Power-Point" class="headerlink" title="Power Point"></a>Power Point</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要记录工作生活中 Office 三大办公软件的常用操作，根据个人使用记录不断更新完善。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Nginx搭建文件服务器</title>
    <link href="https://octocat9lee.github.io/2020/03/11/Nginx%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://octocat9lee.github.io/2020/03/11/Nginx搭建文件服务器/</id>
    <published>2020-03-11T07:12:03.000Z</published>
    <updated>2023-04-04T03:41:50.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="编译-nginx-upload-module-模块"><a href="#编译-nginx-upload-module-模块" class="headerlink" title="编译 nginx-upload-module 模块"></a>编译 nginx-upload-module 模块</h1><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>nginx 版本和 nginx-upload-module 模块下载地址：<br><a href="https://nginx.org/en/download.html">nginx</a><br><a href="http://www.grid.net.ru/nginx/upload.en.html">nginx-upload-module confiuration</a><br><a href="http://www.grid.net.ru/nginx/download/nginx_upload_module-2.2.0.tar.gz">nginx_upload_module-2.2.0.tar.gz</a></p><span id="more"></span><p>在上述页面下载的 nginx_upload_module-2.2.0 <a href="https://github.com/fdintino/nginx-upload-module/issues/72">编译报如下错误</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: <span class="string">&#x27;ngx_http_request_body_t&#x27;</span> has no member named <span class="string">&#x27;to_write&#x27;</span></span><br></pre></td></tr></table></figure><p>建议直接从 github 下载 master 最新的源码：<br><code>https://github.com/fdintino/nginx-upload-module</code></p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">安装编译环境</span><br><span class="line"><span class="comment">#yum -y install gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel</span></span><br><span class="line"></span><br><span class="line">配置选项</span><br><span class="line"><span class="comment">#./configure --prefix=/opt/nginx --with-http_stub_status_module --with-http_ssl_module --add-module=/home/zhoul/nginx/nginx-upload-module-master</span></span><br><span class="line"></span><br><span class="line">编译</span><br><span class="line"><span class="comment">#make -j</span></span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line"><span class="comment">#make install</span></span><br><span class="line"></span><br><span class="line">查看编译选项</span><br><span class="line"><span class="comment">#/opt/nginx/sbin/nginx -V</span></span><br><span class="line">nginx version: nginx/1.16.1</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>编译成功后，nginx 将安装到  <code>/opt/nginx</code> 路径下。</p><h1 id="配置-nginx-conf"><a href="#配置-nginx-conf" class="headerlink" title="配置 nginx.conf"></a>配置 nginx.conf</h1><p>其中关于下载和上传配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  4;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        charset utf-8;</span><br><span class="line">        listen       9090;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        client_max_body_size 1024m;</span><br><span class="line"></span><br><span class="line">        location /static &#123;</span><br><span class="line">            <span class="built_in">alias</span> /opt/upload;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /download &#123;</span><br><span class="line">            <span class="built_in">alias</span>  /opt/nginx/upload;</span><br><span class="line">            autoindex on;</span><br><span class="line">            autoindex_localtime on;</span><br><span class="line">            autoindex_exact_size off;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /upload &#123;</span><br><span class="line">            upload_pass /nginx_upload_rename;</span><br><span class="line">            upload_store /opt/nginx/upload;</span><br><span class="line"></span><br><span class="line">            upload_store_access user:rw group:r all:r;</span><br><span class="line">            upload_resumable on;</span><br><span class="line">            upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_name&quot;</span> <span class="variable">$upload_file_name</span>;</span><br><span class="line">            upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_content_type&quot;</span> <span class="variable">$upload_content_type</span>;</span><br><span class="line">            upload_set_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_path&quot;</span> <span class="variable">$upload_tmp_path</span>;</span><br><span class="line"></span><br><span class="line">            upload_aggregate_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_md5&quot;</span> <span class="variable">$upload_file_md5</span>;</span><br><span class="line">            upload_aggregate_form_field <span class="string">&quot;<span class="variable">$&#123;upload_field_name&#125;</span>_size&quot;</span> <span class="variable">$upload_file_size</span>;</span><br><span class="line"></span><br><span class="line">            upload_limit_rate 10000000;</span><br><span class="line">            upload_cleanup 400 404 499 500-505;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /nginx_upload_rename &#123;</span><br><span class="line">            proxy_pass http://localhost:9092;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="重命名文件"><a href="#重命名文件" class="headerlink" title="重命名文件"></a>重命名文件</h1><p>使用 Node  服务对上传后的文件进行重命名，Node.js 脚本内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">const http = require(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line">const fs = require(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">http.createServer((req, res) =&gt; &#123;</span><br><span class="line">    let body = &#x27;&#x27;;</span><br><span class="line">    req.on(&#x27;data&#x27;, chunk =&gt; &#123;</span><br><span class="line">        body += chunk;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    req.on(&#x27;end&#x27;, () =&gt; &#123;</span><br><span class="line">        console.log(body);</span><br><span class="line">        const params = parseForm(body);</span><br><span class="line">        const resParams = response(params);</span><br><span class="line">        rename(params.file_path, resParams.FileName);</span><br><span class="line">        jsonRes = JSON.stringify(resParams)</span><br><span class="line">        res.end(jsonRes);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).listen(<span class="number">9092</span>)</span><br><span class="line"></span><br><span class="line">function parseForm(data) &#123;</span><br><span class="line">    const reg = /name=&quot;([\w_]+)&quot;\s+(.+)\s/g;</span><br><span class="line">    const params = &#123;&#125;;</span><br><span class="line">    let matched;</span><br><span class="line">    while ((matched = reg.exec(data))) &#123;</span><br><span class="line">        params[matched[1]] = matched[2];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(params);</span><br><span class="line">    <span class="built_in">return</span> params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> rename(<span class="built_in">source</span>, name) &#123;</span><br><span class="line">    const path = require(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">    const <span class="built_in">dir</span> = path.dirname(<span class="built_in">source</span>);</span><br><span class="line">    fs.renameSync(<span class="built_in">source</span>, path.join(<span class="built_in">dir</span>, name));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> response(params) &#123;</span><br><span class="line">    const res = &#123;&#125;;</span><br><span class="line">    const fileName = params.file_name.substring(0, params.file_name.lastIndexOf(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">    const fileExtension = params.file_name.substring(params.file_name.lastIndexOf(<span class="string">&#x27;.&#x27;</span>) + 1);</span><br><span class="line">    res[<span class="string">&quot;FileName&quot;</span>] = fileName + <span class="string">&quot;-&quot;</span> + params.file_md5.substring(0, 8) + <span class="string">&quot;.&quot;</span> + fileExtension;</span><br><span class="line">    res[<span class="string">&quot;FileMD5&quot;</span>] = params.file_md5;</span><br><span class="line">    res[<span class="string">&quot;FileSize&quot;</span>] = params.file_size;</span><br><span class="line">    <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>C++ 方式重命名文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">struct NginxUploadRequest</span><br><span class="line">&#123;</span><br><span class="line">    std::string filename;     // 原始文件名</span><br><span class="line">    std::string filetype;     // 文件类型</span><br><span class="line">    std::string uploadPath;   // nginx 上传后随机文件名</span><br><span class="line">    std::string filemd5;      // 文件 MD5</span><br><span class="line">    std::string filesize;     // 文件大小</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">static const std::string NGINX_UPLOAD_PATH(<span class="string">&quot;/opt/nginx/upload/&quot;</span>);</span><br><span class="line"></span><br><span class="line">static bool FileExistInDir(const std::string &amp;filename)</span><br><span class="line">&#123;</span><br><span class="line">    // 文件存在返回 <span class="literal">true</span>; 不存在返回 <span class="literal">false</span></span><br><span class="line">    bool exist(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span>((::access(filename.c_str(), F_OK)) == -1)</span><br><span class="line">    &#123;</span><br><span class="line">        exist = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> exist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static std::string GetNewFileAbsolutePath(const std::string &amp;originPath, const std::string &amp;newName)</span><br><span class="line">&#123;</span><br><span class="line">    char buf[512] = &#123;0&#125;;</span><br><span class="line">    strncpy(buf, originPath.c_str(), originPath.length());</span><br><span class="line">    const char *<span class="built_in">dir</span> = ::<span class="built_in">dirname</span>(buf);</span><br><span class="line">    <span class="built_in">return</span> std::string(<span class="built_in">dir</span>) + <span class="string">&quot;/&quot;</span> + newName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static bool RenameUploadFile(const std::string &amp;originPath, const std::string &amp;newPath)</span><br><span class="line">&#123;</span><br><span class="line">    bool result(<span class="literal">false</span>);</span><br><span class="line">    // 防止错误路径执行重命名命令</span><br><span class="line">    <span class="keyword">if</span>(originPath.substr(0, NGINX_UPLOAD_PATH.length()) == NGINX_UPLOAD_PATH)</span><br><span class="line">    &#123;</span><br><span class="line">        struct <span class="built_in">stat</span> originStat;</span><br><span class="line">        <span class="built_in">stat</span>(originPath.c_str(), &amp;originStat);</span><br><span class="line">        <span class="keyword">if</span>(S_ISREG(originStat.st_mode))</span><br><span class="line">        &#123;</span><br><span class="line">            // 常规文件才重命名</span><br><span class="line">            int ret = ::rename(originPath.c_str(), newPath.c_str());</span><br><span class="line">            <span class="keyword">if</span>(ret == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                result = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LOG4_ERROR(<span class="string">&quot;not regular file, path: &quot;</span> &lt;&lt; <span class="string">originPath);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        LOG4_ERROR(&quot;upload path error, path: &quot; &lt;&lt; originPath</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static std::string GetNginxUploadKeyValue(const std::string &amp;key, const std::string &amp;content)</span><br><span class="line">&#123;</span><br><span class="line">    const std::string PREFIX(<span class="string">&quot;Content-Disposition: form-data; name=\&quot;&quot;</span>);</span><br><span class="line">    const std::string POSTFIX(<span class="string">&quot;\n------WebKitFormBoundary&quot;</span>);</span><br><span class="line">    std::string searchKey = PREFIX + key + std::string(<span class="string">&quot;\&quot;\n\n&quot;</span>);</span><br><span class="line">    std::size_t begin = content.find(searchKey);</span><br><span class="line">    std::string value;</span><br><span class="line">    <span class="keyword">if</span>(begin != std::string::npos)</span><br><span class="line">    &#123;</span><br><span class="line">        begin += searchKey.length();</span><br><span class="line">        std::size_t end = content.find(POSTFIX, begin);</span><br><span class="line">        std::size_t len = end - begin;</span><br><span class="line">        value = content.substr(begin, len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static NginxUploadRequest ParseNginxUploadRequest(const std::string &amp;request)</span><br><span class="line">&#123;</span><br><span class="line">    NginxUploadRequest loadFields;</span><br><span class="line">    std::string body(request);</span><br><span class="line">    // 统一换行符为 \n</span><br><span class="line">    body.erase(std::remove(body.begin(), body.end(), <span class="string">&#x27;\r&#x27;</span>), body.end());</span><br><span class="line">    std::size_t hasBody = body.find(<span class="string">&quot;Content-Disposition: form-data; name=\&quot;file_name\&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(hasBody != std::string::npos)</span><br><span class="line">    &#123;</span><br><span class="line">        loadFields.filename = GetNginxUploadKeyValue(<span class="string">&quot;file_name&quot;</span>, body);</span><br><span class="line">        loadFields.filetype = GetNginxUploadKeyValue(<span class="string">&quot;file_content_type&quot;</span>, body);</span><br><span class="line">        loadFields.uploadPath = GetNginxUploadKeyValue(<span class="string">&quot;file_path&quot;</span>, body);</span><br><span class="line">        loadFields.filemd5 = GetNginxUploadKeyValue(<span class="string">&quot;file_md5&quot;</span>, body);</span><br><span class="line">        loadFields.filesize = GetNginxUploadKeyValue(<span class="string">&quot;file_size&quot;</span>, body);</span><br><span class="line">        LOG4_TRACE(<span class="string">&quot;nginx upload infos, filename: &quot;</span> &lt;&lt; <span class="string">loadFields.filename &lt;&lt; &quot;, type: &quot; &lt;&lt; loadFields</span>.filetype</span><br><span class="line">            &lt;&lt; <span class="string">&quot;, path: &quot;</span> &lt;&lt; <span class="string">loadFields.uploadPath &lt;&lt; &quot;, md5: &quot; &lt;&lt; loadFields</span>.filemd5 &lt;&lt; <span class="string">&quot;, size: &quot;</span> &lt;&lt; <span class="string">loadFields.filesize);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        LOG4_ERROR(&quot;upload request error: &quot; &lt;&lt; request);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return loadFields</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// cinatra http router <span class="keyword">function</span></span><br><span class="line">m_https.route(<span class="string">&quot;/nginx_upload_rename&quot;</span>, [this](cinatra::request const &amp;req, cinatra::response &amp;res, cinatra::context_container &amp;ctx) &#123;</span><br><span class="line">    std::string request = req.body().to_string();</span><br><span class="line">    NginxUploadRequest uploads = ParseNginxUploadRequest(request);</span><br><span class="line"></span><br><span class="line">    JsonStringify json;</span><br><span class="line">    int code = 1;</span><br><span class="line">    std::string msg(<span class="string">&quot;Filename is Empty&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!uploads.filename.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        std::string newFile = GetNewFileAbsolutePath(uploads.uploadPath, uploads.filename);</span><br><span class="line">        <span class="keyword">if</span>(!FileExistInDir(newFile))</span><br><span class="line">        &#123;</span><br><span class="line">            bool renameRet = RenameUploadFile(uploads.uploadPath, newFile);</span><br><span class="line">            <span class="keyword">if</span>(renameRet)</span><br><span class="line">            &#123;</span><br><span class="line">                json.AddKeyValue(std::make_pair(<span class="string">&quot;FileName&quot;</span>, uploads.filename));</span><br><span class="line">                json.AddKeyValue(std::make_pair(<span class="string">&quot;FileMD5&quot;</span>, uploads.filemd5));</span><br><span class="line">                json.AddKeyValue(std::make_pair(<span class="string">&quot;FileSize&quot;</span>, uploads.filesize));</span><br><span class="line">                code = 0;</span><br><span class="line">                msg = std::string(<span class="string">&quot;Success&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                code = 3;</span><br><span class="line">                msg = std::string(<span class="string">&quot;Rename Failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            code = 2;</span><br><span class="line">            msg = std::string(<span class="string">&quot;File Exist&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(code != 0)</span><br><span class="line">    &#123;</span><br><span class="line">        // 设置 400, nginx upload module 自动删除上传的文件</span><br><span class="line">        res.set_status(cinatra::response::bad_request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    JsonStringify::JsonObjectValue objValue;</span><br><span class="line">    objValue.push_back(std::make_pair(<span class="string">&quot;Code&quot;</span>, JsonValue(std::to_string(code), kJSON_INT)));</span><br><span class="line">    objValue.push_back(std::make_pair(<span class="string">&quot;Msg&quot;</span>, msg));</span><br><span class="line">    json.AddObject(<span class="string">&quot;Res&quot;</span>, objValue);</span><br><span class="line">    std::string response = json.Stringify();</span><br><span class="line">    LOG4_TRACE(<span class="string">&quot;nginx rename response: &quot;</span> &lt;&lt; <span class="string">response);</span></span><br><span class="line"><span class="string">    res.response_text(response</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="配置下载认证"><a href="#配置下载认证" class="headerlink" title="配置下载认证"></a>配置下载认证</h1><p>在部分情况下，我们下载时需要对用户身份进行登录认证。我们可以使用 <code>auth_basic_user_file</code> 指定用户名密码文件，该文件我们可以使用如下方法生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">&#x27;admin:&#x27;</span> &gt;&gt; .httppasswd</span><br><span class="line">openssl passwd &gt;&gt; .httppasswd</span><br><span class="line"><span class="comment"># type your password twice</span></span><br></pre></td></tr></table></figure><p>查看生成的密码文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat .httppasswd</span></span><br><span class="line">admin:MkKvxko6goeT6</span><br></pre></td></tr></table></figure><p>然后，在需要登录身份认证下载的路由处进行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location /download &#123;</span><br><span class="line">    <span class="built_in">alias</span>  /opt/nginx/upload;</span><br><span class="line">    auth_basic <span class="string">&quot;download&quot;</span>;</span><br><span class="line">    auth_basic_user_file /opt/nginx/conf/.httppasswd;</span><br><span class="line">    autoindex on;</span><br><span class="line">    autoindex_localtime on;</span><br><span class="line">    autoindex_exact_size off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后，对配置文件正确性进行校验，并重启 <code>Nginx</code> 服务。</p><p>在 <code>linux</code> 下使用 <code>curl</code> 工具进行测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:123456 http://10.0.204.75:9003/download/video_1593656556958.mp4 -o a.mp4</span><br></pre></td></tr></table></figure><p>报文请求分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">GET /download/user_alarm_resource/xxx.tmp HTTP/1.1</span><br><span class="line">Authorization: Basic YWRtaW46MTIzNDU2</span><br><span class="line">User-Agent: curl/7.29.0</span><br><span class="line">Host: 10.0.204.75:9003</span><br><span class="line">Accept: */*</span><br><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.16.1</span><br><span class="line">Date: Wed, 08 Jul 2020 07:41:47 GMT</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">Content-Length: 4</span><br><span class="line">Last-Modified: Wed, 08 Jul 2020 07:41:04 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: <span class="string">&quot;5f057890-4&quot;</span></span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line"></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>在请求<code>Authorization</code>字段使用<code>base64</code>加密方式对<code>用户名:密码</code>进行加密后的内容。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://www.grid.net.ru/nginx/upload.en.html">Nginx upload module (v 2.2.0)</a><br><a href="https://www.jianshu.com/p/ef9f75094a65">centos7 使用nginx上传文件</a><br><a href="https://www.jianshu.com/p/7d2b0567521f">nginx-upload-module上传文件重命名</a><br><a href="https://zhuleichina.github.io/2019/12/12/%E5%9F%BA%E4%BA%8Enginx%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E5%99%A8.html">基于nginx的文件上传下载服务器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;编译-nginx-upload-module-模块&quot;&gt;&lt;a href=&quot;#编译-nginx-upload-module-模块&quot; class=&quot;headerlink&quot; title=&quot;编译 nginx-upload-module 模块&quot;&gt;&lt;/a&gt;编译 nginx-upload-module 模块&lt;/h1&gt;&lt;h2 id=&quot;下载源码&quot;&gt;&lt;a href=&quot;#下载源码&quot; class=&quot;headerlink&quot; title=&quot;下载源码&quot;&gt;&lt;/a&gt;下载源码&lt;/h2&gt;&lt;p&gt;nginx 版本和 nginx-upload-module 模块下载地址：&lt;br&gt;&lt;a href=&quot;https://nginx.org/en/download.html&quot;&gt;nginx&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.grid.net.ru/nginx/upload.en.html&quot;&gt;nginx-upload-module confiuration&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.grid.net.ru/nginx/download/nginx_upload_module-2.2.0.tar.gz&quot;&gt;nginx_upload_module-2.2.0.tar.gz&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术点滴" scheme="https://octocat9lee.github.io/tags/%E6%8A%80%E6%9C%AF%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>孩子把你的手给我</title>
    <link href="https://octocat9lee.github.io/2019/11/14/%E5%AD%A9%E5%AD%90%E6%8A%8A%E4%BD%A0%E7%9A%84%E6%89%8B%E7%BB%99%E6%88%91/"/>
    <id>https://octocat9lee.github.io/2019/11/14/孩子把你的手给我/</id>
    <published>2019-11-14T13:35:59.000Z</published>
    <updated>2023-04-04T03:41:50.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="推荐语"><a href="#推荐语" class="headerlink" title="推荐语"></a>推荐语</h1><p>如果说在父母与孩子的教育方面有什么经典著作的话，那么，首屈一指的就是吉诺特博士的这本著作——它彻底改变了父母与孩子的沟通方式，在这个领域，这是一本革命性的著作。父母可以帮助孩子可为一个品质高洁的人，一个有着怜悯心，敢于承担和义务的人，一个有勇气、充满活力、正直的人。光有爱是不够的，洞察力也不足以胜任，好的父母需要技巧，如何获得并使用这些技巧就是这本书的主要内容。</p><span id="more"></span><h1 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h1><p>海姆·G·吉诺特,心理学博士、临床心理家、儿童心理学家、儿科医生；纽约大学研究生院兼职心理学教授、艾德尔菲大学博士后。<br>吉诺特博士的一生并不长，他将其短短的一生致力于儿童心理研究以及对父母和教师的教育。<br>他依靠他的职明才智做了很多创造性的工作，取得了巨大的成就。他在他的书中、演讲中、专栏中宣传的如何跟孩子沟通的创新思想不仅在美国，甚至在全世界都获得巨大反响。</p><h1 id="关于本书"><a href="#关于本书" class="headerlink" title="关于本书"></a>关于本书</h1><p><a href="https://book.douban.com/subject/1067049/">孩子，把你的手给我</a></p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="第1章-交流的密码：父母和孩子的对话"><a href="#第1章-交流的密码：父母和孩子的对话" class="headerlink" title="第1章 交流的密码：父母和孩子的对话"></a>第1章 交流的密码：父母和孩子的对话</h2><ul><li>孩子的问题：隐藏的含义</li><li>毫无效果的对话：说教和批评产生距离和怨恨</li><li>沟通：针对孩子的感受作出反应，而不是针对其行为</li><li>谈话的原则：理解和共鸣</li><li>鱼儿会游泳，鸟儿会飞翔，人会感知：混乱的感受，混乱的信息</li><li>映射情感：说出孩子的感觉有助于他们理解自己是怎么想的</li></ul><h2 id="第2章-语言的力量：鼓励和指导的更好方法"><a href="#第2章-语言的力量：鼓励和指导的更好方法" class="headerlink" title="第2章 语言的力量：鼓励和指导的更好方法"></a>第2章 语言的力量：鼓励和指导的更好方法</h2><ul><li>称赞对孩子不再有用了吗？</li><li>给孩子指导而不是批评</li><li>当出了问题时：要回应，而不是反应</li><li>辱骂会伤害孩子</li><li>一致的交流：让言语和心情相符</li><li>如何得理我们自己的愤怒</li><li>发怒的三个步骤</li><li>对生气孩子的回就：方法最重要</li><li>总结</li></ul><h2 id="第3章-自取其害：应该避免的错误作法"><a href="#第3章-自取其害：应该避免的错误作法" class="headerlink" title="第3章 自取其害：应该避免的错误作法"></a>第3章 自取其害：应该避免的错误作法</h2><ul><li>恐吓：不端行为的邀请函</li><li>财赂：重新思考一下“如果……那么”的谬误</li><li>许诺：为什么不切实际的期望会给每个人带来焦虑</li><li>挖苦：学习的严重障碍</li><li>权威需要简短：少说更有效</li><li>对待谎言的政策：学会怎样才能不县助长谎言</li><li>对不诚实的处理：一盎司的预防胜过一吨的调查</li><li>偷窃：懂得所有权是需要时间和耐心的</li><li>不能用粗鲁方式教育孩子懂礼貌：培养礼貌的方法</li><li>总结</li></ul><h2 id="第4章-责任：要求服从，不如传输价值观"><a href="#第4章-责任：要求服从，不如传输价值观" class="headerlink" title="第4章 责任：要求服从，不如传输价值观"></a>第4章 责任：要求服从，不如传输价值观</h2><ul><li>责任感的源泉</li><li>预期的目标和日常实践</li><li>长期计划和短期计划</li><li>医治孩子的情感创伤</li><li>与孩子建立联系</li><li>映射孩子的感觉</li><li>预防“愤怒的葡萄”</li><li>不带抨击地陈述感受和想法</li><li>孩子的发言权和选择</li><li>家长会：把问题集中在如何帮助孩子上</li><li>朋友和玩伴：监督孩子的社交</li><li>培养孩子的独立性</li></ul><h2 id="第5章-纪律：寻找替代惩罚的有效手段"><a href="#第5章-纪律：寻找替代惩罚的有效手段" class="headerlink" title="第5章 纪律：寻找替代惩罚的有效手段"></a>第5章 纪律：寻找替代惩罚的有效手段</h2><ul><li>父母的矛盾心态：需要更好的方法</li><li>纪律的三个领域：鼓励、允许、禁止</li></ul><h2 id="第6章-积极的养育：孩子生活中的一天"><a href="#第6章-积极的养育：孩子生活中的一天" class="headerlink" title="第6章 积极的养育：孩子生活中的一天"></a>第6章 积极的养育：孩子生活中的一天</h2><ul><li>好的开始</li><li>时间表的专制：高峰期</li><li>早餐：没有道德说教的进餐</li><li>抱怨：得理捻情绪</li><li>穿衣服：鞋带的战争</li><li>上学：帮助比长篇大论更好</li><li>放学：提供热情的欢迎</li><li>回家：在一天的最后阶段重新和孩子交流</li><li>就寝时间：战争还是和平</li><li>父母的特权：不需要孩子的许可证</li><li>电视：裸露和死亡</li></ul><h2 id="第7章-妒忌：不幸的传统"><a href="#第7章-妒忌：不幸的传统" class="headerlink" title="第7章 妒忌：不幸的传统"></a>第7章 妒忌：不幸的传统</h2><ul><li>新生儿诞生：仿佛兄弟姐妹之间的入侵</li><li>诞生：介绍入侵者</li><li>表达妒忌：对话好于病症</li><li>同情的话语：妒忌的消除</li><li>质量或平等：爱要惟一，而人不均一</li><li>离婚和再婚：妒忌的另一个竞技场</li></ul><h2 id="第8章-孩子焦虑的一些来源：提供情感上的安全感"><a href="#第8章-孩子焦虑的一些来源：提供情感上的安全感" class="headerlink" title="第8章 孩子焦虑的一些来源：提供情感上的安全感"></a>第8章 孩子焦虑的一些来源：提供情感上的安全感</h2><ul><li><p>因为担心被抛弃而产生的集虑：通过准备工作让孩子安心</p></li><li><p>由于内疚而产生的集虑：简洁更加有效</p></li><li><p>因不信任或者不耐烦而产生的集臣：给孩子成长的空间</p></li><li><p>由于父母之间的冲突产生的焦虑：内战导致的后果</p></li><li><p>由于生命的终结而产生的集虑：神秘面纱下的谜团</p><h2 id="第9章-性和人类价值观：需要审慎处理的重要问题"><a href="#第9章-性和人类价值观：需要审慎处理的重要问题" class="headerlink" title="第9章 性和人类价值观：需要审慎处理的重要问题"></a>第9章 性和人类价值观：需要审慎处理的重要问题</h2></li><li><p>父母自己对性的态度</p></li><li><p>性感觉的开始</p></li><li><p>性和上厕所训练</p></li><li><p>回答问题</p></li><li><p>裸体</p></li><li><p>禁止的游戏</p></li><li><p>脏话</p></li><li><p>性教育</p></li><li><p>分享孩子的性经历</p></li><li><p>成熟的爱</p></li></ul><h2 id="第10章-总结：如何养育孩子"><a href="#第10章-总结：如何养育孩子" class="headerlink" title="第10章 总结：如何养育孩子"></a>第10章 总结：如何养育孩子</h2><ul><li>纪律：对感受要宽容，对行为要严格</li><li>关于而有效地对待孩子是可能的</li></ul><h1 id="音频解读"><a href="#音频解读" class="headerlink" title="音频解读"></a>音频解读</h1>        <div id="aplayer-romvZCNm" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-romvZCNm"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "孩子把你的手给我",              author: "解读",              url: "https://github.com/octocat9lee/blog-images/raw/master/hai_zi_ba_ni_shou_gei_wo_jie_tu.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="访谈"><a href="#访谈" class="headerlink" title="访谈"></a>访谈</h1>        <div id="aplayer-bKrzojVs" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-bKrzojVs"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "孩子把你的手给我",              author: "访谈",              url: "https://github.com/octocat9lee/blog-images/raw/master/hai_zi_ba_ni_shou_gei_wo_fang_tan.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;推荐语&quot;&gt;&lt;a href=&quot;#推荐语&quot; class=&quot;headerlink&quot; title=&quot;推荐语&quot;&gt;&lt;/a&gt;推荐语&lt;/h1&gt;&lt;p&gt;如果说在父母与孩子的教育方面有什么经典著作的话，那么，首屈一指的就是吉诺特博士的这本著作——它彻底改变了父母与孩子的沟通方式，在这个领域，这是一本革命性的著作。父母可以帮助孩子可为一个品质高洁的人，一个有着怜悯心，敢于承担和义务的人，一个有勇气、充满活力、正直的人。光有爱是不够的，洞察力也不足以胜任，好的父母需要技巧，如何获得并使用这些技巧就是这本书的主要内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>如何培养孩子的社会能力</title>
    <link href="https://octocat9lee.github.io/2019/11/05/%E5%A6%82%E4%BD%95%E5%9F%B9%E5%85%BB%E5%AD%A9%E5%AD%90%E7%9A%84%E7%A4%BE%E4%BC%9A%E8%83%BD%E5%8A%9B/"/>
    <id>https://octocat9lee.github.io/2019/11/05/如何培养孩子的社会能力/</id>
    <published>2019-11-04T23:27:02.000Z</published>
    <updated>2023-04-04T03:41:50.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="推荐语"><a href="#推荐语" class="headerlink" title="推荐语"></a>推荐语</h1><span id="more"></span><center>![avatar](https://gitee.com/zhoulee/blog-images/raw/master/pei_yang_nengli_1.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/pei_yang_nengli_2.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/pei_yang_nengli_3.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/pei_yang_nengli_4.jpg)</center>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;推荐语&quot;&gt;&lt;a href=&quot;#推荐语&quot; class=&quot;headerlink&quot; title=&quot;推荐语&quot;&gt;&lt;/a&gt;推荐语&lt;/h1&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>正面管教</title>
    <link href="https://octocat9lee.github.io/2019/10/31/%E6%AD%A3%E9%9D%A2%E7%AE%A1%E6%95%99/"/>
    <id>https://octocat9lee.github.io/2019/10/31/正面管教/</id>
    <published>2019-10-31T08:18:16.000Z</published>
    <updated>2023-04-04T03:41:50.806Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><span id="more"></span><center>![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_0.png)</center><h1 id="推荐语"><a href="#推荐语" class="headerlink" title="推荐语"></a>推荐语</h1><center>![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_1.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_2.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_3.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_4.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_5.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_6.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_7.jpg)![avatar](https://gitee.com/zhoulee/blog-images/raw/master/zheng_mian_guan_jiao_8.jpg)</center>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;思维导图&quot;&gt;&lt;a href=&quot;#思维导图&quot; class=&quot;headerlink&quot; title=&quot;思维导图&quot;&gt;&lt;/a&gt;思维导图&lt;/h1&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>那些比拼命努力更重要的事</title>
    <link href="https://octocat9lee.github.io/2019/09/15/%E9%82%A3%E4%BA%9B%E6%AF%94%E6%8B%BC%E5%91%BD%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%8B/"/>
    <id>https://octocat9lee.github.io/2019/09/15/那些比拼命努力更重要的事/</id>
    <published>2019-09-15T03:39:14.000Z</published>
    <updated>2023-04-04T03:41:50.812Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="整体介绍"><a href="#整体介绍" class="headerlink" title="整体介绍"></a>整体介绍</h1><p>在我们的人生中 是什么让我们保持健康且幸福呢？ 如果现在你可以 为未来的自己投资 你会把时间和精力投资在哪里呢？ 最近在千禧一代中有这么一个调查 问他们生活中最重要的目标是什么 超过80%的人说 最大的生活目标就是要有钱 还有50%的年轻人说 另一个重要的生活目标 就是要出名 </p><p>而且我们总是被灌输 要投入工作，要加倍努力 要成就更多。 我们被灌输了这样一种观念， 只有做到刚才说的这些 才能有好日子过。 要人们纵观整个人生， 想象各种选择， 以及这些选择最终导致的结果， 几乎是不可能的。 关于人的一生，我们能了解到的， 大部分都是通过人的回忆得来， 但众所周知，大部分都是事后诸葛。 一生中，我们会忘记很多发生过的事情， 而且记忆常常不可靠。 </p><span id="more"></span><p>但如果我们可以从头到尾地 纵观人的一生呢？ 如果我们可以跟踪研究一个人， 从他少年时代开始 一直到他步入晚年， 看看究竟是什么让人们 保持快乐和健康呢？ </p><p>我们做到了。 哈佛大学（进行的）这项 关于成人发展的研究， 可能是同类研究中耗时最长的。 在75年时间里， 我们跟踪了724个人的一生， 年复一年，了解他们的工作、 家庭生活、健康状况， 当然，在这一过程中， 我们完全不知道他们的人生 将走向何方。 </p><p>像这样的研究少之又少。 像这样的项目几乎都会在10年内终止， 因为有许多人会中途退出， 或者是研究资金不足， 或者是研究者转换方向， 或者去世，然后项目无人接手。 但感谢幸运女神的眷顾 和几代研究人员的坚持不懈， 这个项目存活下来了。 目前这724人中 仍有60人在世， 仍然在参与研究 大多数人已经90多岁了。 现在我们已经开始研究 他们的子孙后代， 人数多达2000多人。 我是这个项目的第四任负责人。 </p><p>从1938年起，我们 开始跟踪两组人的生活。 第一组加入这个项目的人， 当年在哈佛大学上大二。 他们在二战期间大学毕业， 大部分人都参军作战了。 我们追踪的第二组人 是一群来自波士顿贫民区的小男孩， 他们之所以被选中， 主要是因为他们来自 20世纪30年代波士顿 最困难 最贫困的家庭。 大部分住在廉价公寓里， 很多都没有冷热水供应。 </p><p>在加入这个项目时， 这些年轻人都接受了面试。 接受了身体检查。 我们挨家挨户走访了他们的父母。 然后这些年轻人长大成人， 进入到社会各个阶层。 成为了工人、律师、砖匠、医生， 还有一位成了美国总统。 有人成为酒鬼，有人患了精神分裂。 有人从社会最底层 一路青云直上， 也有人恰相反，掉落云端。 </p><p>这个项目的创始人们， 可能做梦都不会想到 75年后的今天，我会站在这里， 告诉你们这个项目还在继续。 每两年，我们耐心而专注的研究人员 会打电话给我们的研究对象， 问他们是否愿意 再做一套关于他们生活的问卷。 </p><p>那些来自波士顿的人问我们， “为什么你们一直想研究我？ 我的生活是很无趣的。” 但哈佛的人从没这样问过。 </p><p>为了更好地了解这些人的生活， 我们不光给他们发问卷。 我们还在他们家客厅采访他们。 从他们医生那儿拿病历。 抽他们的血，扫描他们的大脑， 跟他们的孩子聊天。 我们拍摄下他们和妻子谈话的场景， 聊的都是他们最关心的问题。 大约在10年前，我们 终于开口问他们的妻子， 是否愿意加入我们的研究， 很多女士都说，“是啊， 终于轮到我们了。” </p><p>那么我们得到了什么结论呢？ 那长达几万页的数据记录， 记录了他们的生活， 我们从这些记录中间， 到底学到了什么？ 不是关于财富、名望， 或更加努力工作。 从75年的研究中， 我们得到的最明确的结论是： 良好的人际关系能 让人更加快乐和健康。就这样。 </p><p>关于人际关系，我们得到三大结论。 第一，社会关系对我们是有益的， 而孤独寂寞有害健康。 我们发现，那些跟家庭成员更亲近的人， 更爱与朋友、与邻居交往的人， 会比那些不善交际、离群索居的人， 更快乐，更健康，更长寿。 孤独寂寞是有害健康的。 那些“被孤立”的人， 跟不孤单的人相比， 往往更加不快乐， 等他们人到中年时，健康状况下降更快， 大脑功能下降得更快， 也没那么长寿。 可惜的是，长久以来， 每5个美国人中就至少 有1个声称自己是孤独的。 </p><p>而且即便你身在人群中， 甚至已经结婚了， 你还是可能感到孤独， 因此我们得到的第二大结论是 不是你有多少朋友， 也不是你身边有没有伴侣， 真正有影响的是这些关系的质量。 整天吵吵闹闹，对健康是有害的。 比如成天吵架，没有爱的婚姻， 对健康的影响或许比离婚还大。 而关系和睦融洽， 则对我们的健康有益。 </p><p>当我们的研究对象步入80岁时， 我们会回顾他们的中年生活 看我们能否预测 哪些人会在八九十岁时过得快乐健康 哪些人不会。 我们把他们50岁时的所有信息 进行汇总分析， 发现决定他们将如何老去的， 并不是他们中年时的胆固醇水平。 而是他们对婚姻生活的满意度。 那些在50岁时满意度最高的人， 在80岁时也是最健康的。 另外，良好和亲密的婚姻关系 能减缓衰老带来的痛苦。 参与者中那些最幸福的夫妻告诉我们， 在他们80多岁时， 哪怕身体出现各种毛病， 他们依旧觉得日子很幸福。 而那些婚姻不快乐的人， 身体上会出现更多不适， 因为坏情绪把身体的痛苦放大了。 </p><p>关于婚姻和健康的关系， 我们得到的第三大结论是， 幸福的婚姻不单能保护我们的身体， 还能保护我们的大脑。 研究发现，如果在80多岁时， 你的婚姻生活还温暖和睦， 你对自己的另一半 依然信任有加， 知道对方在关键时刻能指望得上， 那么你的记忆力都不容易衰退。 而反过来， 那些觉得无法信任 自己的另一半的人， 记忆力会更早表现出衰退。 幸福的婚姻，并不意味着从不拌嘴。 有些夫妻，八九十岁了， 还天天斗嘴， 但只要他们坚信，在关键时刻， 对方能靠得住， 那这些争吵顶多只是生活的调味剂。 </p><p>所以请记住， 幸福和睦的婚姻对健康是有利的， 这是永恒的真理。 但为什么我们总是办不到呢？ 因为我们是人类。 我们总喜欢找捷径， 总想一劳永逸， 找到一种方法，解决所有问题。 人际关系麻烦又复杂， 与家人、朋友相处需要努力付出， 一点也不高大上。 而且需要一辈子投入，无穷无尽。 在我们长达75年的研究中， 那些最享受退休生活的人， 是那些主动用玩伴 来替代工作伙伴的人。 就像开头我说过的千禧一代一样， 我们跟踪研究的很多人 在年轻的时候 坚信名望、财富和成就 是他们过上好日子的保证。 但在75年的时间里， 我们的研究一次次地证明， 日子过得最好的， 是那些主动与人交往的人， 与家人、朋友或者邻居。 </p><p>那么你们呢？ 也许你现在25岁， 或者40岁，或者60岁。 怎样才算主动与人交往呢？ </p><p>嗯，我想有很多种方法吧。 最简单的，别再跟屏幕聊天了， 去跟人聊天， 或者一起尝试些新事物， 让关系恢复活力， 一起散个步呀，晚上约个会呀， 或者给多年未曾联系的亲戚打个电话， 因为这种家庭不和睦太常见了， 但它带来的伤害又很大， 尤其对那些喜欢 生闷气的人来说更是如此。 </p><p>我想引用马克•吐温的一段话来作为结束。 一个多世纪前， 他回首自己的人生， 写下这样一段话： “时光荏苒，生命短暂， 别将时间浪费在 争吵、道歉、伤心和责备上。 用时间去爱吧， 哪怕只有一瞬间，也不要辜负。” </p><p>美好人生，从良好的人际关系开始。 </p><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><h2 id="视频演讲"><a href="#视频演讲" class="headerlink" title="视频演讲"></a>视频演讲</h2><p><a href="https://www.ted.com/talks/robert_waldinger_what_makes_a_good_life_lessons_from_the_longest_study_on_happiness/transcript#t-129233">what makes a good life lessons from the longest study on happiness</a></p><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p><a href="https://book.douban.com/subject/27616629/">那些比拼命努力更重要的事</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;整体介绍&quot;&gt;&lt;a href=&quot;#整体介绍&quot; class=&quot;headerlink&quot; title=&quot;整体介绍&quot;&gt;&lt;/a&gt;整体介绍&lt;/h1&gt;&lt;p&gt;在我们的人生中 是什么让我们保持健康且幸福呢？ 如果现在你可以 为未来的自己投资 你会把时间和精力投资在哪里呢？ 最近在千禧一代中有这么一个调查 问他们生活中最重要的目标是什么 超过80%的人说 最大的生活目标就是要有钱 还有50%的年轻人说 另一个重要的生活目标 就是要出名 &lt;/p&gt;
&lt;p&gt;而且我们总是被灌输 要投入工作，要加倍努力 要成就更多。 我们被灌输了这样一种观念， 只有做到刚才说的这些 才能有好日子过。 要人们纵观整个人生， 想象各种选择， 以及这些选择最终导致的结果， 几乎是不可能的。 关于人的一生，我们能了解到的， 大部分都是通过人的回忆得来， 但众所周知，大部分都是事后诸葛。 一生中，我们会忘记很多发生过的事情， 而且记忆常常不可靠。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="家庭教育" scheme="https://octocat9lee.github.io/tags/%E5%AE%B6%E5%BA%AD%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>openSIPS使用自己账号系统鉴权</title>
    <link href="https://octocat9lee.github.io/2019/03/18/openSIPS%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E8%B4%A6%E5%8F%B7%E7%B3%BB%E7%BB%9F%E9%89%B4%E6%9D%83/"/>
    <id>https://octocat9lee.github.io/2019/03/18/openSIPS使用自己账号系统鉴权/</id>
    <published>2019-03-18T02:58:02.000Z</published>
    <updated>2023-04-04T03:41:50.799Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通常情况下，我们都不会用<code>opensips</code>数据库的<code>subscriber</code>表中的账号和密码进行鉴权，而是使用项目业务系统的账号系统进行鉴权。因此需要对鉴权模块进行相关配置。</p><h1 id="鉴权模块配置"><a href="#鉴权模块配置" class="headerlink" title="鉴权模块配置"></a>鉴权模块配置</h1><h2 id="配置URI模块"><a href="#配置URI模块" class="headerlink" title="配置URI模块"></a>配置URI模块</h2><p>使用如下配置更改URI模块对应字段值，<a href="http://www.opensips.org/html/docs/modules/2.3.x/uri.html">URI模块各个字段含义文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### URI module</span></span><br><span class="line">loadmodule <span class="string">&quot;uri.so&quot;</span></span><br><span class="line">modparam(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;use_uri_table&quot;</span>, 0)</span><br><span class="line">modparam(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;db_table&quot;</span>, <span class="string">&quot;m_user&quot;</span>) <span class="comment"># my_user_db数据库中的m_user表</span></span><br><span class="line">modparam(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;user_column&quot;</span>, <span class="string">&quot;Name&quot;</span>) <span class="comment"># m_user表中的账号字段名 </span></span><br><span class="line">modparam(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;domain_column&quot;</span>, <span class="string">&quot;Domain&quot;</span>) <span class="comment"># m_user表中的Domain字段名</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="配置鉴权Auth模块"><a href="#配置鉴权Auth模块" class="headerlink" title="配置鉴权Auth模块"></a>配置鉴权Auth模块</h2><p>通常情况下，我们都不会用<code>opensips</code>数据库的<code>subscriber</code>表中的账号和密码进行鉴权，而是使用项目业务系统的账号系统进行鉴权。也就是使用业务系统的数据库中的账号密码进行鉴权。如下图配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### AUTHentication modules</span></span><br><span class="line">loadmodule <span class="string">&quot;auth.so&quot;</span></span><br><span class="line">loadmodule <span class="string">&quot;auth_db.so&quot;</span></span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;calculate_ha1&quot;</span>, <span class="built_in">yes</span>)</span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;user_column&quot;</span>, <span class="string">&quot;Name&quot;</span>)  <span class="comment"># 鉴权表中的账号字段名</span></span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;domain_column&quot;</span>, <span class="string">&quot;Domain&quot;</span>)</span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;password_column&quot;</span>, <span class="string">&quot;Password&quot;</span>) <span class="comment"># 鉴权表中的密码字段名</span></span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;password_column_2&quot;</span>, <span class="string">&quot;HA1B&quot;</span>)</span><br><span class="line">modparam(<span class="string">&quot;auth_db|uri&quot;</span>, <span class="string">&quot;db_url&quot;</span>, <span class="string">&quot;mysql://opensips:opensipsrw@10.0.15.2:3306/my_user_db&quot;</span>) <span class="comment"># CUSTOMIZE ME 数据库链接设置</span></span><br><span class="line">modparam(<span class="string">&quot;auth_db&quot;</span>, <span class="string">&quot;load_credentials&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>关于<code>m_user</code>表中用户名列<code>Name</code>，密码列<code>Password</code>以及<code>ha1</code>列和<code>ha1b</code>列计算方法：</p><ol><li>用户名列为注册的用户名</li><li>密码列为密码明文md5加密后的值，即md5(plaintext)作为<code>Password</code>列的值</li><li>ha1=md5(username:Domain:md5(plaintext) ) 在上面将Domain配置为<code>opensips.org</code></li><li>ha1b=md5(username@Domain:Domain:md5(plaintext))</li></ol><p>例如：假设用户名为<code>zhoulee</code>，用户密码明文<code>123456</code>，<br>则<code>Password</code>的值为<code>md5(123456)=e10adc3949ba59abbe56e057f20f883e</code>，<br><code>ha1= md5(zhoulee:opensips.org:e10adc3949ba59abbe56e057f20f883e)</code>，<br><code>ha1b=md5(zhoulee@opensips.org:opensips.org:e10adc3949ba59abbe56e057f20f883e)</code>。</p><p><a href="http://tool.chinaz.com/tools/md5.aspx">在线MD5加密网站</a></p><h2 id="对用户表授权"><a href="#对用户表授权" class="headerlink" title="对用户表授权"></a>对用户表授权</h2><p>openSIPS使用的数据库默认为<code>opensips</code>，但在URI和Auth模块配置中，把用户表指向了<code>my_user_db</code>数据库的<code>m_user</code>表，所以要给MySQL的<code>opensips</code>用户开放权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grant select on my_user_db.m_user to opensips@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">grant select on my_user_db.version to opensips@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">grant select on my_user_db.m_user to opensips@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">grant select on my_user_db.version to opensips@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>并同时在<code>my_user_db</code>数据库的<code>version</code>表中插入如下2条记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into version(table_name, table_version) values(<span class="string">&#x27;m_user&#x27;</span>, 7);</span><br><span class="line">insert into version(table_name, table_version) values(<span class="string">&#x27;subscriber&#x27;</span>, 7);</span><br></pre></td></tr></table></figure><h2 id="配置代理鉴权和注册鉴权"><a href="#配置代理鉴权和注册鉴权" class="headerlink" title="配置代理鉴权和注册鉴权"></a>配置代理鉴权和注册鉴权</h2><p>修改<code>proxy_authorize(realm, table)</code>和<code>www_authorize(realm, table)</code>中的<code>table</code>字段<code>subscriber</code>为自定义鉴权数据表名<code>m_user</code>。</p><center>![avatar](https://gitee.com/zhoulee/blog-images/raw/master/opensip_subscriber.jpg)</center><h2 id="修改Route"><a href="#修改Route" class="headerlink" title="修改Route"></a>修改Route</h2><p>将路由设置中的<code>if(has_totag())</code>和<code>route[relay]</code>函数中的<code>is_method(&quot;INVITE&quot;)</code>判断中添加<code>UPDATE</code>字段变成<code>is_method(&quot;INVITE|UPDATE&quot;)</code>。</p><center>![avatar](https://gitee.com/zhoulee/blog-images/raw/master/opensips_update.jpg)</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通常情况下，我们都不会用&lt;code&gt;opensips&lt;/code&gt;数据库的&lt;code&gt;subscriber&lt;/code&gt;表中的账号和密码进行鉴权，而是使用项目业务系统的账号系统进行鉴权。因此需要对鉴权模块进行相关配置。&lt;/p&gt;
&lt;h1 id=&quot;鉴权模块配置&quot;&gt;&lt;a href=&quot;#鉴权模块配置&quot; class=&quot;headerlink&quot; title=&quot;鉴权模块配置&quot;&gt;&lt;/a&gt;鉴权模块配置&lt;/h1&gt;&lt;h2 id=&quot;配置URI模块&quot;&gt;&lt;a href=&quot;#配置URI模块&quot; class=&quot;headerlink&quot; title=&quot;配置URI模块&quot;&gt;&lt;/a&gt;配置URI模块&lt;/h2&gt;&lt;p&gt;使用如下配置更改URI模块对应字段值，&lt;a href=&quot;http://www.opensips.org/html/docs/modules/2.3.x/uri.html&quot;&gt;URI模块各个字段含义文档&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### URI module&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;loadmodule &lt;span class=&quot;string&quot;&gt;&amp;quot;uri.so&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modparam(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;use_uri_table&amp;quot;&lt;/span&gt;, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modparam(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;db_table&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;m_user&amp;quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# my_user_db数据库中的m_user表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modparam(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;user_column&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# m_user表中的账号字段名 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modparam(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;domain_column&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Domain&amp;quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# m_user表中的Domain字段名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="openSIPS" scheme="https://octocat9lee.github.io/tags/openSIPS/"/>
    
  </entry>
  
</feed>
